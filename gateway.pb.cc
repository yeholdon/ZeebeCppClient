// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway.proto

#include "gateway.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace gateway_protocol {
PROTOBUF_CONSTEXPR ActivateJobsRequest::ActivateJobsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fetchvariable_)*/{}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.worker_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timeout_)*/int64_t{0}
  , /*decltype(_impl_.requesttimeout_)*/int64_t{0}
  , /*decltype(_impl_.maxjobstoactivate_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActivateJobsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivateJobsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivateJobsRequestDefaultTypeInternal() {}
  union {
    ActivateJobsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivateJobsRequestDefaultTypeInternal _ActivateJobsRequest_default_instance_;
PROTOBUF_CONSTEXPR ActivateJobsResponse::ActivateJobsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jobs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActivateJobsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivateJobsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivateJobsResponseDefaultTypeInternal() {}
  union {
    ActivateJobsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivateJobsResponseDefaultTypeInternal _ActivateJobsResponse_default_instance_;
PROTOBUF_CONSTEXPR ActivatedJob::ActivatedJob(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.bpmnprocessid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.elementid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.customheaders_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.worker_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_)*/int64_t{0}
  , /*decltype(_impl_.processinstancekey_)*/int64_t{0}
  , /*decltype(_impl_.processdefinitionkey_)*/int64_t{0}
  , /*decltype(_impl_.elementinstancekey_)*/int64_t{0}
  , /*decltype(_impl_.processdefinitionversion_)*/0
  , /*decltype(_impl_.retries_)*/0
  , /*decltype(_impl_.deadline_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActivatedJobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivatedJobDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivatedJobDefaultTypeInternal() {}
  union {
    ActivatedJob _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivatedJobDefaultTypeInternal _ActivatedJob_default_instance_;
PROTOBUF_CONSTEXPR CancelProcessInstanceRequest::CancelProcessInstanceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.processinstancekey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CancelProcessInstanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelProcessInstanceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelProcessInstanceRequestDefaultTypeInternal() {}
  union {
    CancelProcessInstanceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelProcessInstanceRequestDefaultTypeInternal _CancelProcessInstanceRequest_default_instance_;
PROTOBUF_CONSTEXPR CancelProcessInstanceResponse::CancelProcessInstanceResponse(
    ::_pbi::ConstantInitialized) {}
struct CancelProcessInstanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelProcessInstanceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelProcessInstanceResponseDefaultTypeInternal() {}
  union {
    CancelProcessInstanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelProcessInstanceResponseDefaultTypeInternal _CancelProcessInstanceResponse_default_instance_;
PROTOBUF_CONSTEXPR CompleteJobRequest::CompleteJobRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.jobkey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CompleteJobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteJobRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteJobRequestDefaultTypeInternal() {}
  union {
    CompleteJobRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteJobRequestDefaultTypeInternal _CompleteJobRequest_default_instance_;
PROTOBUF_CONSTEXPR CompleteJobResponse::CompleteJobResponse(
    ::_pbi::ConstantInitialized) {}
struct CompleteJobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteJobResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteJobResponseDefaultTypeInternal() {}
  union {
    CompleteJobResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteJobResponseDefaultTypeInternal _CompleteJobResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateProcessInstanceRequest::CreateProcessInstanceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.startinstructions_)*/{}
  , /*decltype(_impl_.bpmnprocessid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.processdefinitionkey_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProcessInstanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProcessInstanceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProcessInstanceRequestDefaultTypeInternal() {}
  union {
    CreateProcessInstanceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProcessInstanceRequestDefaultTypeInternal _CreateProcessInstanceRequest_default_instance_;
PROTOBUF_CONSTEXPR ProcessInstanceCreationStartInstruction::ProcessInstanceCreationStartInstruction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.elementid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProcessInstanceCreationStartInstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessInstanceCreationStartInstructionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessInstanceCreationStartInstructionDefaultTypeInternal() {}
  union {
    ProcessInstanceCreationStartInstruction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessInstanceCreationStartInstructionDefaultTypeInternal _ProcessInstanceCreationStartInstruction_default_instance_;
PROTOBUF_CONSTEXPR CreateProcessInstanceResponse::CreateProcessInstanceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bpmnprocessid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.processdefinitionkey_)*/int64_t{0}
  , /*decltype(_impl_.processinstancekey_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProcessInstanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProcessInstanceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProcessInstanceResponseDefaultTypeInternal() {}
  union {
    CreateProcessInstanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProcessInstanceResponseDefaultTypeInternal _CreateProcessInstanceResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateProcessInstanceWithResultRequest::CreateProcessInstanceWithResultRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fetchvariables_)*/{}
  , /*decltype(_impl_.request_)*/nullptr
  , /*decltype(_impl_.requesttimeout_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProcessInstanceWithResultRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProcessInstanceWithResultRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProcessInstanceWithResultRequestDefaultTypeInternal() {}
  union {
    CreateProcessInstanceWithResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProcessInstanceWithResultRequestDefaultTypeInternal _CreateProcessInstanceWithResultRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateProcessInstanceWithResultResponse::CreateProcessInstanceWithResultResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bpmnprocessid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.processdefinitionkey_)*/int64_t{0}
  , /*decltype(_impl_.processinstancekey_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProcessInstanceWithResultResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProcessInstanceWithResultResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProcessInstanceWithResultResponseDefaultTypeInternal() {}
  union {
    CreateProcessInstanceWithResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProcessInstanceWithResultResponseDefaultTypeInternal _CreateProcessInstanceWithResultResponse_default_instance_;
PROTOBUF_CONSTEXPR DeployProcessRequest::DeployProcessRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.processes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployProcessRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployProcessRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployProcessRequestDefaultTypeInternal() {}
  union {
    DeployProcessRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployProcessRequestDefaultTypeInternal _DeployProcessRequest_default_instance_;
PROTOBUF_CONSTEXPR ProcessRequestObject::ProcessRequestObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProcessRequestObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessRequestObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessRequestObjectDefaultTypeInternal() {}
  union {
    ProcessRequestObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessRequestObjectDefaultTypeInternal _ProcessRequestObject_default_instance_;
PROTOBUF_CONSTEXPR DeployProcessResponse::DeployProcessResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.processes_)*/{}
  , /*decltype(_impl_.key_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployProcessResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployProcessResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployProcessResponseDefaultTypeInternal() {}
  union {
    DeployProcessResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployProcessResponseDefaultTypeInternal _DeployProcessResponse_default_instance_;
PROTOBUF_CONSTEXPR DeployResourceRequest::DeployResourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resources_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployResourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployResourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployResourceRequestDefaultTypeInternal() {}
  union {
    DeployResourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployResourceRequestDefaultTypeInternal _DeployResourceRequest_default_instance_;
PROTOBUF_CONSTEXPR Resource::Resource(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceDefaultTypeInternal() {}
  union {
    Resource _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceDefaultTypeInternal _Resource_default_instance_;
PROTOBUF_CONSTEXPR DeployResourceResponse::DeployResourceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.deployments_)*/{}
  , /*decltype(_impl_.key_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployResourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployResourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployResourceResponseDefaultTypeInternal() {}
  union {
    DeployResourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployResourceResponseDefaultTypeInternal _DeployResourceResponse_default_instance_;
PROTOBUF_CONSTEXPR Deployment::Deployment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Metadata_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct DeploymentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeploymentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeploymentDefaultTypeInternal() {}
  union {
    Deployment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeploymentDefaultTypeInternal _Deployment_default_instance_;
PROTOBUF_CONSTEXPR ProcessMetadata::ProcessMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bpmnprocessid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.resourcename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.processdefinitionkey_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProcessMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessMetadataDefaultTypeInternal() {}
  union {
    ProcessMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessMetadataDefaultTypeInternal _ProcessMetadata_default_instance_;
PROTOBUF_CONSTEXPR DecisionMetadata::DecisionMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dmndecisionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dmndecisionname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dmndecisionrequirementsid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.decisionkey_)*/int64_t{0}
  , /*decltype(_impl_.decisionrequirementskey_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DecisionMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecisionMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecisionMetadataDefaultTypeInternal() {}
  union {
    DecisionMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecisionMetadataDefaultTypeInternal _DecisionMetadata_default_instance_;
PROTOBUF_CONSTEXPR DecisionRequirementsMetadata::DecisionRequirementsMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dmndecisionrequirementsid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dmndecisionrequirementsname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.resourcename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.decisionrequirementskey_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DecisionRequirementsMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecisionRequirementsMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecisionRequirementsMetadataDefaultTypeInternal() {}
  union {
    DecisionRequirementsMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecisionRequirementsMetadataDefaultTypeInternal _DecisionRequirementsMetadata_default_instance_;
PROTOBUF_CONSTEXPR FailJobRequest::FailJobRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errormessage_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.jobkey_)*/int64_t{0}
  , /*decltype(_impl_.retrybackoff_)*/int64_t{0}
  , /*decltype(_impl_.retries_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FailJobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FailJobRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FailJobRequestDefaultTypeInternal() {}
  union {
    FailJobRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FailJobRequestDefaultTypeInternal _FailJobRequest_default_instance_;
PROTOBUF_CONSTEXPR FailJobResponse::FailJobResponse(
    ::_pbi::ConstantInitialized) {}
struct FailJobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FailJobResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FailJobResponseDefaultTypeInternal() {}
  union {
    FailJobResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FailJobResponseDefaultTypeInternal _FailJobResponse_default_instance_;
PROTOBUF_CONSTEXPR ThrowErrorRequest::ThrowErrorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errorcode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.errormessage_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.jobkey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ThrowErrorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThrowErrorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThrowErrorRequestDefaultTypeInternal() {}
  union {
    ThrowErrorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThrowErrorRequestDefaultTypeInternal _ThrowErrorRequest_default_instance_;
PROTOBUF_CONSTEXPR ThrowErrorResponse::ThrowErrorResponse(
    ::_pbi::ConstantInitialized) {}
struct ThrowErrorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThrowErrorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThrowErrorResponseDefaultTypeInternal() {}
  union {
    ThrowErrorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThrowErrorResponseDefaultTypeInternal _ThrowErrorResponse_default_instance_;
PROTOBUF_CONSTEXPR PublishMessageRequest::PublishMessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.correlationkey_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.messageid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timetolive_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PublishMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishMessageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishMessageRequestDefaultTypeInternal() {}
  union {
    PublishMessageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishMessageRequestDefaultTypeInternal _PublishMessageRequest_default_instance_;
PROTOBUF_CONSTEXPR PublishMessageResponse::PublishMessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PublishMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishMessageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishMessageResponseDefaultTypeInternal() {}
  union {
    PublishMessageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishMessageResponseDefaultTypeInternal _PublishMessageResponse_default_instance_;
PROTOBUF_CONSTEXPR ResolveIncidentRequest::ResolveIncidentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.incidentkey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResolveIncidentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolveIncidentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolveIncidentRequestDefaultTypeInternal() {}
  union {
    ResolveIncidentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolveIncidentRequestDefaultTypeInternal _ResolveIncidentRequest_default_instance_;
PROTOBUF_CONSTEXPR ResolveIncidentResponse::ResolveIncidentResponse(
    ::_pbi::ConstantInitialized) {}
struct ResolveIncidentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolveIncidentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolveIncidentResponseDefaultTypeInternal() {}
  union {
    ResolveIncidentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolveIncidentResponseDefaultTypeInternal _ResolveIncidentResponse_default_instance_;
PROTOBUF_CONSTEXPR TopologyRequest::TopologyRequest(
    ::_pbi::ConstantInitialized) {}
struct TopologyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopologyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopologyRequestDefaultTypeInternal() {}
  union {
    TopologyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopologyRequestDefaultTypeInternal _TopologyRequest_default_instance_;
PROTOBUF_CONSTEXPR TopologyResponse::TopologyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.brokers_)*/{}
  , /*decltype(_impl_.gatewayversion_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.clustersize_)*/0
  , /*decltype(_impl_.partitionscount_)*/0
  , /*decltype(_impl_.replicationfactor_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TopologyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopologyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopologyResponseDefaultTypeInternal() {}
  union {
    TopologyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopologyResponseDefaultTypeInternal _TopologyResponse_default_instance_;
PROTOBUF_CONSTEXPR BrokerInfo::BrokerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.partitions_)*/{}
  , /*decltype(_impl_.host_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nodeid_)*/0
  , /*decltype(_impl_.port_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BrokerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerInfoDefaultTypeInternal() {}
  union {
    BrokerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerInfoDefaultTypeInternal _BrokerInfo_default_instance_;
PROTOBUF_CONSTEXPR Partition::Partition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.partitionid_)*/0
  , /*decltype(_impl_.role_)*/0
  , /*decltype(_impl_.health_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PartitionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartitionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartitionDefaultTypeInternal() {}
  union {
    Partition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartitionDefaultTypeInternal _Partition_default_instance_;
PROTOBUF_CONSTEXPR UpdateJobRetriesRequest::UpdateJobRetriesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jobkey_)*/int64_t{0}
  , /*decltype(_impl_.retries_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateJobRetriesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateJobRetriesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateJobRetriesRequestDefaultTypeInternal() {}
  union {
    UpdateJobRetriesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateJobRetriesRequestDefaultTypeInternal _UpdateJobRetriesRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateJobRetriesResponse::UpdateJobRetriesResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateJobRetriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateJobRetriesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateJobRetriesResponseDefaultTypeInternal() {}
  union {
    UpdateJobRetriesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateJobRetriesResponseDefaultTypeInternal _UpdateJobRetriesResponse_default_instance_;
PROTOBUF_CONSTEXPR SetVariablesRequest::SetVariablesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.elementinstancekey_)*/int64_t{0}
  , /*decltype(_impl_.local_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVariablesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVariablesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVariablesRequestDefaultTypeInternal() {}
  union {
    SetVariablesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVariablesRequestDefaultTypeInternal _SetVariablesRequest_default_instance_;
PROTOBUF_CONSTEXPR SetVariablesResponse::SetVariablesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVariablesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVariablesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVariablesResponseDefaultTypeInternal() {}
  union {
    SetVariablesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVariablesResponseDefaultTypeInternal _SetVariablesResponse_default_instance_;
PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest_ActivateInstruction::ModifyProcessInstanceRequest_ActivateInstruction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variableinstructions_)*/{}
  , /*decltype(_impl_.elementid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ancestorelementinstancekey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModifyProcessInstanceRequest_ActivateInstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest_ActivateInstructionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyProcessInstanceRequest_ActivateInstructionDefaultTypeInternal() {}
  union {
    ModifyProcessInstanceRequest_ActivateInstruction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyProcessInstanceRequest_ActivateInstructionDefaultTypeInternal _ModifyProcessInstanceRequest_ActivateInstruction_default_instance_;
PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest_VariableInstruction::ModifyProcessInstanceRequest_VariableInstruction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variables_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.scopeid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModifyProcessInstanceRequest_VariableInstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest_VariableInstructionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyProcessInstanceRequest_VariableInstructionDefaultTypeInternal() {}
  union {
    ModifyProcessInstanceRequest_VariableInstruction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyProcessInstanceRequest_VariableInstructionDefaultTypeInternal _ModifyProcessInstanceRequest_VariableInstruction_default_instance_;
PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest_TerminateInstruction::ModifyProcessInstanceRequest_TerminateInstruction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.elementinstancekey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModifyProcessInstanceRequest_TerminateInstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest_TerminateInstructionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyProcessInstanceRequest_TerminateInstructionDefaultTypeInternal() {}
  union {
    ModifyProcessInstanceRequest_TerminateInstruction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyProcessInstanceRequest_TerminateInstructionDefaultTypeInternal _ModifyProcessInstanceRequest_TerminateInstruction_default_instance_;
PROTOBUF_CONSTEXPR ModifyProcessInstanceRequest::ModifyProcessInstanceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.activateinstructions_)*/{}
  , /*decltype(_impl_.terminateinstructions_)*/{}
  , /*decltype(_impl_.processinstancekey_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModifyProcessInstanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyProcessInstanceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyProcessInstanceRequestDefaultTypeInternal() {}
  union {
    ModifyProcessInstanceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyProcessInstanceRequestDefaultTypeInternal _ModifyProcessInstanceRequest_default_instance_;
PROTOBUF_CONSTEXPR ModifyProcessInstanceResponse::ModifyProcessInstanceResponse(
    ::_pbi::ConstantInitialized) {}
struct ModifyProcessInstanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyProcessInstanceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyProcessInstanceResponseDefaultTypeInternal() {}
  union {
    ModifyProcessInstanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyProcessInstanceResponseDefaultTypeInternal _ModifyProcessInstanceResponse_default_instance_;
}  // namespace gateway_protocol
static ::_pb::Metadata file_level_metadata_gateway_2eproto[43];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_gateway_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_gateway_2eproto = nullptr;

const uint32_t TableStruct_gateway_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _impl_.worker_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _impl_.timeout_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _impl_.maxjobstoactivate_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _impl_.fetchvariable_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsRequest, _impl_.requesttimeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivateJobsResponse, _impl_.jobs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.processinstancekey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.bpmnprocessid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.processdefinitionversion_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.processdefinitionkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.elementid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.elementinstancekey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.customheaders_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.worker_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.retries_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.deadline_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ActivatedJob, _impl_.variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CancelProcessInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CancelProcessInstanceRequest, _impl_.processinstancekey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CancelProcessInstanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CompleteJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CompleteJobRequest, _impl_.jobkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CompleteJobRequest, _impl_.variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CompleteJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceRequest, _impl_.processdefinitionkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceRequest, _impl_.bpmnprocessid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceRequest, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceRequest, _impl_.variables_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceRequest, _impl_.startinstructions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessInstanceCreationStartInstruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessInstanceCreationStartInstruction, _impl_.elementid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceResponse, _impl_.processdefinitionkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceResponse, _impl_.bpmnprocessid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceResponse, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceResponse, _impl_.processinstancekey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultRequest, _impl_.request_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultRequest, _impl_.requesttimeout_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultRequest, _impl_.fetchvariables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultResponse, _impl_.processdefinitionkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultResponse, _impl_.bpmnprocessid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultResponse, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultResponse, _impl_.processinstancekey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::CreateProcessInstanceWithResultResponse, _impl_.variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployProcessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployProcessRequest, _impl_.processes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessRequestObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessRequestObject, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessRequestObject, _impl_.definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployProcessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployProcessResponse, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployProcessResponse, _impl_.processes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployResourceRequest, _impl_.resources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Resource, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Resource, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployResourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployResourceResponse, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DeployResourceResponse, _impl_.deployments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Deployment, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Deployment, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Deployment, _impl_.Metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessMetadata, _impl_.bpmnprocessid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessMetadata, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessMetadata, _impl_.processdefinitionkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ProcessMetadata, _impl_.resourcename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _impl_.dmndecisionid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _impl_.dmndecisionname_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _impl_.decisionkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _impl_.dmndecisionrequirementsid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionMetadata, _impl_.decisionrequirementskey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionRequirementsMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionRequirementsMetadata, _impl_.dmndecisionrequirementsid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionRequirementsMetadata, _impl_.dmndecisionrequirementsname_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionRequirementsMetadata, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionRequirementsMetadata, _impl_.decisionrequirementskey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::DecisionRequirementsMetadata, _impl_.resourcename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::FailJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::FailJobRequest, _impl_.jobkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::FailJobRequest, _impl_.retries_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::FailJobRequest, _impl_.errormessage_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::FailJobRequest, _impl_.retrybackoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::FailJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ThrowErrorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ThrowErrorRequest, _impl_.jobkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ThrowErrorRequest, _impl_.errorcode_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ThrowErrorRequest, _impl_.errormessage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ThrowErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageRequest, _impl_.correlationkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageRequest, _impl_.timetolive_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageRequest, _impl_.messageid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageRequest, _impl_.variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::PublishMessageResponse, _impl_.key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ResolveIncidentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ResolveIncidentRequest, _impl_.incidentkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ResolveIncidentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyResponse, _impl_.brokers_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyResponse, _impl_.clustersize_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyResponse, _impl_.partitionscount_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyResponse, _impl_.replicationfactor_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::TopologyResponse, _impl_.gatewayversion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::BrokerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::BrokerInfo, _impl_.nodeid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::BrokerInfo, _impl_.host_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::BrokerInfo, _impl_.port_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::BrokerInfo, _impl_.partitions_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::BrokerInfo, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Partition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Partition, _impl_.partitionid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Partition, _impl_.role_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::Partition, _impl_.health_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::UpdateJobRetriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::UpdateJobRetriesRequest, _impl_.jobkey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::UpdateJobRetriesRequest, _impl_.retries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::UpdateJobRetriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::SetVariablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::SetVariablesRequest, _impl_.elementinstancekey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::SetVariablesRequest, _impl_.variables_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::SetVariablesRequest, _impl_.local_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::SetVariablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::SetVariablesResponse, _impl_.key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction, _impl_.elementid_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction, _impl_.ancestorelementinstancekey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction, _impl_.variableinstructions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction, _impl_.variables_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction, _impl_.scopeid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_TerminateInstruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest_TerminateInstruction, _impl_.elementinstancekey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest, _impl_.processinstancekey_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest, _impl_.activateinstructions_),
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceRequest, _impl_.terminateinstructions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gateway_protocol::ModifyProcessInstanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::gateway_protocol::ActivateJobsRequest)},
  { 12, -1, -1, sizeof(::gateway_protocol::ActivateJobsResponse)},
  { 19, -1, -1, sizeof(::gateway_protocol::ActivatedJob)},
  { 38, -1, -1, sizeof(::gateway_protocol::CancelProcessInstanceRequest)},
  { 45, -1, -1, sizeof(::gateway_protocol::CancelProcessInstanceResponse)},
  { 51, -1, -1, sizeof(::gateway_protocol::CompleteJobRequest)},
  { 59, -1, -1, sizeof(::gateway_protocol::CompleteJobResponse)},
  { 65, -1, -1, sizeof(::gateway_protocol::CreateProcessInstanceRequest)},
  { 76, -1, -1, sizeof(::gateway_protocol::ProcessInstanceCreationStartInstruction)},
  { 83, -1, -1, sizeof(::gateway_protocol::CreateProcessInstanceResponse)},
  { 93, -1, -1, sizeof(::gateway_protocol::CreateProcessInstanceWithResultRequest)},
  { 102, -1, -1, sizeof(::gateway_protocol::CreateProcessInstanceWithResultResponse)},
  { 113, -1, -1, sizeof(::gateway_protocol::DeployProcessRequest)},
  { 120, -1, -1, sizeof(::gateway_protocol::ProcessRequestObject)},
  { 128, -1, -1, sizeof(::gateway_protocol::DeployProcessResponse)},
  { 136, -1, -1, sizeof(::gateway_protocol::DeployResourceRequest)},
  { 143, -1, -1, sizeof(::gateway_protocol::Resource)},
  { 151, -1, -1, sizeof(::gateway_protocol::DeployResourceResponse)},
  { 159, -1, -1, sizeof(::gateway_protocol::Deployment)},
  { 169, -1, -1, sizeof(::gateway_protocol::ProcessMetadata)},
  { 179, -1, -1, sizeof(::gateway_protocol::DecisionMetadata)},
  { 191, -1, -1, sizeof(::gateway_protocol::DecisionRequirementsMetadata)},
  { 202, -1, -1, sizeof(::gateway_protocol::FailJobRequest)},
  { 212, -1, -1, sizeof(::gateway_protocol::FailJobResponse)},
  { 218, -1, -1, sizeof(::gateway_protocol::ThrowErrorRequest)},
  { 227, -1, -1, sizeof(::gateway_protocol::ThrowErrorResponse)},
  { 233, -1, -1, sizeof(::gateway_protocol::PublishMessageRequest)},
  { 244, -1, -1, sizeof(::gateway_protocol::PublishMessageResponse)},
  { 251, -1, -1, sizeof(::gateway_protocol::ResolveIncidentRequest)},
  { 258, -1, -1, sizeof(::gateway_protocol::ResolveIncidentResponse)},
  { 264, -1, -1, sizeof(::gateway_protocol::TopologyRequest)},
  { 270, -1, -1, sizeof(::gateway_protocol::TopologyResponse)},
  { 281, -1, -1, sizeof(::gateway_protocol::BrokerInfo)},
  { 292, -1, -1, sizeof(::gateway_protocol::Partition)},
  { 301, -1, -1, sizeof(::gateway_protocol::UpdateJobRetriesRequest)},
  { 309, -1, -1, sizeof(::gateway_protocol::UpdateJobRetriesResponse)},
  { 315, -1, -1, sizeof(::gateway_protocol::SetVariablesRequest)},
  { 324, -1, -1, sizeof(::gateway_protocol::SetVariablesResponse)},
  { 331, -1, -1, sizeof(::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction)},
  { 340, -1, -1, sizeof(::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction)},
  { 348, -1, -1, sizeof(::gateway_protocol::ModifyProcessInstanceRequest_TerminateInstruction)},
  { 355, -1, -1, sizeof(::gateway_protocol::ModifyProcessInstanceRequest)},
  { 364, -1, -1, sizeof(::gateway_protocol::ModifyProcessInstanceResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::gateway_protocol::_ActivateJobsRequest_default_instance_._instance,
  &::gateway_protocol::_ActivateJobsResponse_default_instance_._instance,
  &::gateway_protocol::_ActivatedJob_default_instance_._instance,
  &::gateway_protocol::_CancelProcessInstanceRequest_default_instance_._instance,
  &::gateway_protocol::_CancelProcessInstanceResponse_default_instance_._instance,
  &::gateway_protocol::_CompleteJobRequest_default_instance_._instance,
  &::gateway_protocol::_CompleteJobResponse_default_instance_._instance,
  &::gateway_protocol::_CreateProcessInstanceRequest_default_instance_._instance,
  &::gateway_protocol::_ProcessInstanceCreationStartInstruction_default_instance_._instance,
  &::gateway_protocol::_CreateProcessInstanceResponse_default_instance_._instance,
  &::gateway_protocol::_CreateProcessInstanceWithResultRequest_default_instance_._instance,
  &::gateway_protocol::_CreateProcessInstanceWithResultResponse_default_instance_._instance,
  &::gateway_protocol::_DeployProcessRequest_default_instance_._instance,
  &::gateway_protocol::_ProcessRequestObject_default_instance_._instance,
  &::gateway_protocol::_DeployProcessResponse_default_instance_._instance,
  &::gateway_protocol::_DeployResourceRequest_default_instance_._instance,
  &::gateway_protocol::_Resource_default_instance_._instance,
  &::gateway_protocol::_DeployResourceResponse_default_instance_._instance,
  &::gateway_protocol::_Deployment_default_instance_._instance,
  &::gateway_protocol::_ProcessMetadata_default_instance_._instance,
  &::gateway_protocol::_DecisionMetadata_default_instance_._instance,
  &::gateway_protocol::_DecisionRequirementsMetadata_default_instance_._instance,
  &::gateway_protocol::_FailJobRequest_default_instance_._instance,
  &::gateway_protocol::_FailJobResponse_default_instance_._instance,
  &::gateway_protocol::_ThrowErrorRequest_default_instance_._instance,
  &::gateway_protocol::_ThrowErrorResponse_default_instance_._instance,
  &::gateway_protocol::_PublishMessageRequest_default_instance_._instance,
  &::gateway_protocol::_PublishMessageResponse_default_instance_._instance,
  &::gateway_protocol::_ResolveIncidentRequest_default_instance_._instance,
  &::gateway_protocol::_ResolveIncidentResponse_default_instance_._instance,
  &::gateway_protocol::_TopologyRequest_default_instance_._instance,
  &::gateway_protocol::_TopologyResponse_default_instance_._instance,
  &::gateway_protocol::_BrokerInfo_default_instance_._instance,
  &::gateway_protocol::_Partition_default_instance_._instance,
  &::gateway_protocol::_UpdateJobRetriesRequest_default_instance_._instance,
  &::gateway_protocol::_UpdateJobRetriesResponse_default_instance_._instance,
  &::gateway_protocol::_SetVariablesRequest_default_instance_._instance,
  &::gateway_protocol::_SetVariablesResponse_default_instance_._instance,
  &::gateway_protocol::_ModifyProcessInstanceRequest_ActivateInstruction_default_instance_._instance,
  &::gateway_protocol::_ModifyProcessInstanceRequest_VariableInstruction_default_instance_._instance,
  &::gateway_protocol::_ModifyProcessInstanceRequest_TerminateInstruction_default_instance_._instance,
  &::gateway_protocol::_ModifyProcessInstanceRequest_default_instance_._instance,
  &::gateway_protocol::_ModifyProcessInstanceResponse_default_instance_._instance,
};

const char descriptor_table_protodef_gateway_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rgateway.proto\022\020gateway_protocol\"\216\001\n\023Ac"
  "tivateJobsRequest\022\014\n\004type\030\001 \001(\t\022\016\n\006worke"
  "r\030\002 \001(\t\022\017\n\007timeout\030\003 \001(\003\022\031\n\021maxJobsToAct"
  "ivate\030\004 \001(\005\022\025\n\rfetchVariable\030\005 \003(\t\022\026\n\016re"
  "questTimeout\030\006 \001(\003\"D\n\024ActivateJobsRespon"
  "se\022,\n\004jobs\030\001 \003(\0132\036.gateway_protocol.Acti"
  "vatedJob\"\250\002\n\014ActivatedJob\022\013\n\003key\030\001 \001(\003\022\014"
  "\n\004type\030\002 \001(\t\022\032\n\022processInstanceKey\030\003 \001(\003"
  "\022\025\n\rbpmnProcessId\030\004 \001(\t\022 \n\030processDefini"
  "tionVersion\030\005 \001(\005\022\034\n\024processDefinitionKe"
  "y\030\006 \001(\003\022\021\n\telementId\030\007 \001(\t\022\032\n\022elementIns"
  "tanceKey\030\010 \001(\003\022\025\n\rcustomHeaders\030\t \001(\t\022\016\n"
  "\006worker\030\n \001(\t\022\017\n\007retries\030\013 \001(\005\022\020\n\010deadli"
  "ne\030\014 \001(\003\022\021\n\tvariables\030\r \001(\t\":\n\034CancelPro"
  "cessInstanceRequest\022\032\n\022processInstanceKe"
  "y\030\001 \001(\003\"\037\n\035CancelProcessInstanceResponse"
  "\"7\n\022CompleteJobRequest\022\016\n\006jobKey\030\001 \001(\003\022\021"
  "\n\tvariables\030\002 \001(\t\"\025\n\023CompleteJobResponse"
  "\"\315\001\n\034CreateProcessInstanceRequest\022\034\n\024pro"
  "cessDefinitionKey\030\001 \001(\003\022\025\n\rbpmnProcessId"
  "\030\002 \001(\t\022\017\n\007version\030\003 \001(\005\022\021\n\tvariables\030\004 \001"
  "(\t\022T\n\021startInstructions\030\005 \003(\01329.gateway_"
  "protocol.ProcessInstanceCreationStartIns"
  "truction\"<\n\'ProcessInstanceCreationStart"
  "Instruction\022\021\n\telementId\030\001 \001(\t\"\201\001\n\035Creat"
  "eProcessInstanceResponse\022\034\n\024processDefin"
  "itionKey\030\001 \001(\003\022\025\n\rbpmnProcessId\030\002 \001(\t\022\017\n"
  "\007version\030\003 \001(\005\022\032\n\022processInstanceKey\030\004 \001"
  "(\003\"\231\001\n&CreateProcessInstanceWithResultRe"
  "quest\022\?\n\007request\030\001 \001(\0132..gateway_protoco"
  "l.CreateProcessInstanceRequest\022\026\n\016reques"
  "tTimeout\030\002 \001(\003\022\026\n\016fetchVariables\030\003 \003(\t\"\236"
  "\001\n\'CreateProcessInstanceWithResultRespon"
  "se\022\034\n\024processDefinitionKey\030\001 \001(\003\022\025\n\rbpmn"
  "ProcessId\030\002 \001(\t\022\017\n\007version\030\003 \001(\005\022\032\n\022proc"
  "essInstanceKey\030\004 \001(\003\022\021\n\tvariables\030\005 \001(\t\""
  "U\n\024DeployProcessRequest\0229\n\tprocesses\030\001 \003"
  "(\0132&.gateway_protocol.ProcessRequestObje"
  "ct:\002\030\001\"<\n\024ProcessRequestObject\022\014\n\004name\030\001"
  " \001(\t\022\022\n\ndefinition\030\002 \001(\014:\002\030\001\"^\n\025DeployPr"
  "ocessResponse\022\013\n\003key\030\001 \001(\003\0224\n\tprocesses\030"
  "\002 \003(\0132!.gateway_protocol.ProcessMetadata"
  ":\002\030\001\"F\n\025DeployResourceRequest\022-\n\tresourc"
  "es\030\001 \003(\0132\032.gateway_protocol.Resource\")\n\010"
  "Resource\022\014\n\004name\030\001 \001(\t\022\017\n\007content\030\002 \001(\014\""
  "X\n\026DeployResourceResponse\022\013\n\003key\030\001 \001(\003\0221"
  "\n\013deployments\030\002 \003(\0132\034.gateway_protocol.D"
  "eployment\"\326\001\n\nDeployment\0224\n\007process\030\001 \001("
  "\0132!.gateway_protocol.ProcessMetadataH\000\0226"
  "\n\010decision\030\002 \001(\0132\".gateway_protocol.Deci"
  "sionMetadataH\000\022N\n\024decisionRequirements\030\003"
  " \001(\0132..gateway_protocol.DecisionRequirem"
  "entsMetadataH\000B\n\n\010Metadata\"m\n\017ProcessMet"
  "adata\022\025\n\rbpmnProcessId\030\001 \001(\t\022\017\n\007version\030"
  "\002 \001(\005\022\034\n\024processDefinitionKey\030\003 \001(\003\022\024\n\014r"
  "esourceName\030\004 \001(\t\"\254\001\n\020DecisionMetadata\022\025"
  "\n\rdmnDecisionId\030\001 \001(\t\022\027\n\017dmnDecisionName"
  "\030\002 \001(\t\022\017\n\007version\030\003 \001(\005\022\023\n\013decisionKey\030\004"
  " \001(\003\022!\n\031dmnDecisionRequirementsId\030\005 \001(\t\022"
  "\037\n\027decisionRequirementsKey\030\006 \001(\003\"\256\001\n\034Dec"
  "isionRequirementsMetadata\022!\n\031dmnDecision"
  "RequirementsId\030\001 \001(\t\022#\n\033dmnDecisionRequi"
  "rementsName\030\002 \001(\t\022\017\n\007version\030\003 \001(\005\022\037\n\027de"
  "cisionRequirementsKey\030\004 \001(\003\022\024\n\014resourceN"
  "ame\030\005 \001(\t\"]\n\016FailJobRequest\022\016\n\006jobKey\030\001 "
  "\001(\003\022\017\n\007retries\030\002 \001(\005\022\024\n\014errorMessage\030\003 \001"
  "(\t\022\024\n\014retryBackOff\030\004 \001(\003\"\021\n\017FailJobRespo"
  "nse\"L\n\021ThrowErrorRequest\022\016\n\006jobKey\030\001 \001(\003"
  "\022\021\n\terrorCode\030\002 \001(\t\022\024\n\014errorMessage\030\003 \001("
  "\t\"\024\n\022ThrowErrorResponse\"w\n\025PublishMessag"
  "eRequest\022\014\n\004name\030\001 \001(\t\022\026\n\016correlationKey"
  "\030\002 \001(\t\022\022\n\ntimeToLive\030\003 \001(\003\022\021\n\tmessageId\030"
  "\004 \001(\t\022\021\n\tvariables\030\005 \001(\t\"%\n\026PublishMessa"
  "geResponse\022\013\n\003key\030\001 \001(\003\"-\n\026ResolveIncide"
  "ntRequest\022\023\n\013incidentKey\030\001 \001(\003\"\031\n\027Resolv"
  "eIncidentResponse\"\021\n\017TopologyRequest\"\242\001\n"
  "\020TopologyResponse\022-\n\007brokers\030\001 \003(\0132\034.gat"
  "eway_protocol.BrokerInfo\022\023\n\013clusterSize\030"
  "\002 \001(\005\022\027\n\017partitionsCount\030\003 \001(\005\022\031\n\021replic"
  "ationFactor\030\004 \001(\005\022\026\n\016gatewayVersion\030\005 \001("
  "\t\"z\n\nBrokerInfo\022\016\n\006nodeId\030\001 \001(\005\022\014\n\004host\030"
  "\002 \001(\t\022\014\n\004port\030\003 \001(\005\022/\n\npartitions\030\004 \003(\0132"
  "\033.gateway_protocol.Partition\022\017\n\007version\030"
  "\005 \001(\t\"\240\002\n\tPartition\022\023\n\013partitionId\030\001 \001(\005"
  "\022=\n\004role\030\002 \001(\0162/.gateway_protocol.Partit"
  "ion.PartitionBrokerRole\022A\n\006health\030\003 \001(\0162"
  "1.gateway_protocol.Partition.PartitionBr"
  "okerHealth\"=\n\023PartitionBrokerRole\022\n\n\006LEA"
  "DER\020\000\022\014\n\010FOLLOWER\020\001\022\014\n\010INACTIVE\020\002\"=\n\025Par"
  "titionBrokerHealth\022\013\n\007HEALTHY\020\000\022\r\n\tUNHEA"
  "LTHY\020\001\022\010\n\004DEAD\020\002\":\n\027UpdateJobRetriesRequ"
  "est\022\016\n\006jobKey\030\001 \001(\003\022\017\n\007retries\030\002 \001(\005\"\032\n\030"
  "UpdateJobRetriesResponse\"S\n\023SetVariables"
  "Request\022\032\n\022elementInstanceKey\030\001 \001(\003\022\021\n\tv"
  "ariables\030\002 \001(\t\022\r\n\005local\030\003 \001(\010\"#\n\024SetVari"
  "ablesResponse\022\013\n\003key\030\001 \001(\003\"\240\004\n\034ModifyPro"
  "cessInstanceRequest\022\032\n\022processInstanceKe"
  "y\030\001 \001(\003\022`\n\024activateInstructions\030\002 \003(\0132B."
  "gateway_protocol.ModifyProcessInstanceRe"
  "quest.ActivateInstruction\022b\n\025terminateIn"
  "structions\030\003 \003(\0132C.gateway_protocol.Modi"
  "fyProcessInstanceRequest.TerminateInstru"
  "ction\032\256\001\n\023ActivateInstruction\022\021\n\telement"
  "Id\030\001 \001(\t\022\"\n\032ancestorElementInstanceKey\030\002"
  " \001(\003\022`\n\024variableInstructions\030\003 \003(\0132B.gat"
  "eway_protocol.ModifyProcessInstanceReque"
  "st.VariableInstruction\0329\n\023VariableInstru"
  "ction\022\021\n\tvariables\030\001 \001(\t\022\017\n\007scopeId\030\002 \001("
  "\t\0322\n\024TerminateInstruction\022\032\n\022elementInst"
  "anceKey\030\001 \001(\003\"\037\n\035ModifyProcessInstanceRe"
  "sponse2\310\014\n\007Gateway\022a\n\014ActivateJobs\022%.gat"
  "eway_protocol.ActivateJobsRequest\032&.gate"
  "way_protocol.ActivateJobsResponse\"\0000\001\022z\n"
  "\025CancelProcessInstance\022..gateway_protoco"
  "l.CancelProcessInstanceRequest\032/.gateway"
  "_protocol.CancelProcessInstanceResponse\""
  "\000\022\\\n\013CompleteJob\022$.gateway_protocol.Comp"
  "leteJobRequest\032%.gateway_protocol.Comple"
  "teJobResponse\"\000\022z\n\025CreateProcessInstance"
  "\022..gateway_protocol.CreateProcessInstanc"
  "eRequest\032/.gateway_protocol.CreateProces"
  "sInstanceResponse\"\000\022\230\001\n\037CreateProcessIns"
  "tanceWithResult\0228.gateway_protocol.Creat"
  "eProcessInstanceWithResultRequest\0329.gate"
  "way_protocol.CreateProcessInstanceWithRe"
  "sultResponse\"\000\022e\n\rDeployProcess\022&.gatewa"
  "y_protocol.DeployProcessRequest\032\'.gatewa"
  "y_protocol.DeployProcessResponse\"\003\210\002\001\022e\n"
  "\016DeployResource\022\'.gateway_protocol.Deplo"
  "yResourceRequest\032(.gateway_protocol.Depl"
  "oyResourceResponse\"\000\022P\n\007FailJob\022 .gatewa"
  "y_protocol.FailJobRequest\032!.gateway_prot"
  "ocol.FailJobResponse\"\000\022Y\n\nThrowError\022#.g"
  "ateway_protocol.ThrowErrorRequest\032$.gate"
  "way_protocol.ThrowErrorResponse\"\000\022e\n\016Pub"
  "lishMessage\022\'.gateway_protocol.PublishMe"
  "ssageRequest\032(.gateway_protocol.PublishM"
  "essageResponse\"\000\022h\n\017ResolveIncident\022(.ga"
  "teway_protocol.ResolveIncidentRequest\032)."
  "gateway_protocol.ResolveIncidentResponse"
  "\"\000\022_\n\014SetVariables\022%.gateway_protocol.Se"
  "tVariablesRequest\032&.gateway_protocol.Set"
  "VariablesResponse\"\000\022S\n\010Topology\022!.gatewa"
  "y_protocol.TopologyRequest\032\".gateway_pro"
  "tocol.TopologyResponse\"\000\022k\n\020UpdateJobRet"
  "ries\022).gateway_protocol.UpdateJobRetries"
  "Request\032*.gateway_protocol.UpdateJobRetr"
  "iesResponse\"\000\022z\n\025ModifyProcessInstance\022."
  ".gateway_protocol.ModifyProcessInstanceR"
  "equest\032/.gateway_protocol.ModifyProcessI"
  "nstanceResponse\"\000B,\n!io.camunda.zeebe.ga"
  "teway.protocolP\000Z\005./;pbb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_gateway_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_gateway_2eproto = {
    false, false, 6071, descriptor_table_protodef_gateway_2eproto,
    "gateway.proto",
    &descriptor_table_gateway_2eproto_once, nullptr, 0, 43,
    schemas, file_default_instances, TableStruct_gateway_2eproto::offsets,
    file_level_metadata_gateway_2eproto, file_level_enum_descriptors_gateway_2eproto,
    file_level_service_descriptors_gateway_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_gateway_2eproto_getter() {
  return &descriptor_table_gateway_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_gateway_2eproto(&descriptor_table_gateway_2eproto);
namespace gateway_protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Partition_PartitionBrokerRole_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gateway_2eproto);
  return file_level_enum_descriptors_gateway_2eproto[0];
}
bool Partition_PartitionBrokerRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Partition_PartitionBrokerRole Partition::LEADER;
constexpr Partition_PartitionBrokerRole Partition::FOLLOWER;
constexpr Partition_PartitionBrokerRole Partition::INACTIVE;
constexpr Partition_PartitionBrokerRole Partition::PartitionBrokerRole_MIN;
constexpr Partition_PartitionBrokerRole Partition::PartitionBrokerRole_MAX;
constexpr int Partition::PartitionBrokerRole_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Partition_PartitionBrokerHealth_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gateway_2eproto);
  return file_level_enum_descriptors_gateway_2eproto[1];
}
bool Partition_PartitionBrokerHealth_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Partition_PartitionBrokerHealth Partition::HEALTHY;
constexpr Partition_PartitionBrokerHealth Partition::UNHEALTHY;
constexpr Partition_PartitionBrokerHealth Partition::DEAD;
constexpr Partition_PartitionBrokerHealth Partition::PartitionBrokerHealth_MIN;
constexpr Partition_PartitionBrokerHealth Partition::PartitionBrokerHealth_MAX;
constexpr int Partition::PartitionBrokerHealth_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ActivateJobsRequest::_Internal {
 public:
};

ActivateJobsRequest::ActivateJobsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ActivateJobsRequest)
}
ActivateJobsRequest::ActivateJobsRequest(const ActivateJobsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActivateJobsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fetchvariable_){from._impl_.fetchvariable_}
    , decltype(_impl_.type_){}
    , decltype(_impl_.worker_){}
    , decltype(_impl_.timeout_){}
    , decltype(_impl_.requesttimeout_){}
    , decltype(_impl_.maxjobstoactivate_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.worker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worker_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worker().empty()) {
    _this->_impl_.worker_.Set(from._internal_worker(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.timeout_, &from._impl_.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.maxjobstoactivate_) -
    reinterpret_cast<char*>(&_impl_.timeout_)) + sizeof(_impl_.maxjobstoactivate_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ActivateJobsRequest)
}

inline void ActivateJobsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fetchvariable_){arena}
    , decltype(_impl_.type_){}
    , decltype(_impl_.worker_){}
    , decltype(_impl_.timeout_){int64_t{0}}
    , decltype(_impl_.requesttimeout_){int64_t{0}}
    , decltype(_impl_.maxjobstoactivate_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worker_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActivateJobsRequest::~ActivateJobsRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ActivateJobsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActivateJobsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fetchvariable_.~RepeatedPtrField();
  _impl_.type_.Destroy();
  _impl_.worker_.Destroy();
}

void ActivateJobsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActivateJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ActivateJobsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fetchvariable_.Clear();
  _impl_.type_.ClearToEmpty();
  _impl_.worker_.ClearToEmpty();
  ::memset(&_impl_.timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.maxjobstoactivate_) -
      reinterpret_cast<char*>(&_impl_.timeout_)) + sizeof(_impl_.maxjobstoactivate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivateJobsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivateJobsRequest.type"));
        } else
          goto handle_unusual;
        continue;
      // string worker = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worker();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivateJobsRequest.worker"));
        } else
          goto handle_unusual;
        continue;
      // int64 timeout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxJobsToActivate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.maxjobstoactivate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string fetchVariable = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_fetchvariable();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivateJobsRequest.fetchVariable"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 requestTimeout = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.requesttimeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivateJobsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ActivateJobsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivateJobsRequest.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string worker = 2;
  if (!this->_internal_worker().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker().data(), static_cast<int>(this->_internal_worker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivateJobsRequest.worker");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_worker(), target);
  }

  // int64 timeout = 3;
  if (this->_internal_timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_timeout(), target);
  }

  // int32 maxJobsToActivate = 4;
  if (this->_internal_maxjobstoactivate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_maxjobstoactivate(), target);
  }

  // repeated string fetchVariable = 5;
  for (int i = 0, n = this->_internal_fetchvariable_size(); i < n; i++) {
    const auto& s = this->_internal_fetchvariable(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivateJobsRequest.fetchVariable");
    target = stream->WriteString(5, s, target);
  }

  // int64 requestTimeout = 6;
  if (this->_internal_requesttimeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_requesttimeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ActivateJobsRequest)
  return target;
}

size_t ActivateJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ActivateJobsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string fetchVariable = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.fetchvariable_.size());
  for (int i = 0, n = _impl_.fetchvariable_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.fetchvariable_.Get(i));
  }

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string worker = 2;
  if (!this->_internal_worker().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker());
  }

  // int64 timeout = 3;
  if (this->_internal_timeout() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timeout());
  }

  // int64 requestTimeout = 6;
  if (this->_internal_requesttimeout() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_requesttimeout());
  }

  // int32 maxJobsToActivate = 4;
  if (this->_internal_maxjobstoactivate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxjobstoactivate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivateJobsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActivateJobsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivateJobsRequest::GetClassData() const { return &_class_data_; }


void ActivateJobsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActivateJobsRequest*>(&to_msg);
  auto& from = static_cast<const ActivateJobsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ActivateJobsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.fetchvariable_.MergeFrom(from._impl_.fetchvariable_);
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_worker().empty()) {
    _this->_internal_set_worker(from._internal_worker());
  }
  if (from._internal_timeout() != 0) {
    _this->_internal_set_timeout(from._internal_timeout());
  }
  if (from._internal_requesttimeout() != 0) {
    _this->_internal_set_requesttimeout(from._internal_requesttimeout());
  }
  if (from._internal_maxjobstoactivate() != 0) {
    _this->_internal_set_maxjobstoactivate(from._internal_maxjobstoactivate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivateJobsRequest::CopyFrom(const ActivateJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ActivateJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivateJobsRequest::IsInitialized() const {
  return true;
}

void ActivateJobsRequest::InternalSwap(ActivateJobsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fetchvariable_.InternalSwap(&other->_impl_.fetchvariable_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worker_, lhs_arena,
      &other->_impl_.worker_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActivateJobsRequest, _impl_.maxjobstoactivate_)
      + sizeof(ActivateJobsRequest::_impl_.maxjobstoactivate_)
      - PROTOBUF_FIELD_OFFSET(ActivateJobsRequest, _impl_.timeout_)>(
          reinterpret_cast<char*>(&_impl_.timeout_),
          reinterpret_cast<char*>(&other->_impl_.timeout_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivateJobsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[0]);
}

// ===================================================================

class ActivateJobsResponse::_Internal {
 public:
};

ActivateJobsResponse::ActivateJobsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ActivateJobsResponse)
}
ActivateJobsResponse::ActivateJobsResponse(const ActivateJobsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActivateJobsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jobs_){from._impl_.jobs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ActivateJobsResponse)
}

inline void ActivateJobsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jobs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ActivateJobsResponse::~ActivateJobsResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ActivateJobsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActivateJobsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jobs_.~RepeatedPtrField();
}

void ActivateJobsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActivateJobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ActivateJobsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jobs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivateJobsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .gateway_protocol.ActivatedJob jobs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_jobs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivateJobsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ActivateJobsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gateway_protocol.ActivatedJob jobs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_jobs_size()); i < n; i++) {
    const auto& repfield = this->_internal_jobs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ActivateJobsResponse)
  return target;
}

size_t ActivateJobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ActivateJobsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.ActivatedJob jobs = 1;
  total_size += 1UL * this->_internal_jobs_size();
  for (const auto& msg : this->_impl_.jobs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivateJobsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActivateJobsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivateJobsResponse::GetClassData() const { return &_class_data_; }


void ActivateJobsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActivateJobsResponse*>(&to_msg);
  auto& from = static_cast<const ActivateJobsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ActivateJobsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.jobs_.MergeFrom(from._impl_.jobs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivateJobsResponse::CopyFrom(const ActivateJobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ActivateJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivateJobsResponse::IsInitialized() const {
  return true;
}

void ActivateJobsResponse::InternalSwap(ActivateJobsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jobs_.InternalSwap(&other->_impl_.jobs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivateJobsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[1]);
}

// ===================================================================

class ActivatedJob::_Internal {
 public:
};

ActivatedJob::ActivatedJob(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ActivatedJob)
}
ActivatedJob::ActivatedJob(const ActivatedJob& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActivatedJob* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.elementid_){}
    , decltype(_impl_.customheaders_){}
    , decltype(_impl_.worker_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.key_){}
    , decltype(_impl_.processinstancekey_){}
    , decltype(_impl_.processdefinitionkey_){}
    , decltype(_impl_.elementinstancekey_){}
    , decltype(_impl_.processdefinitionversion_){}
    , decltype(_impl_.retries_){}
    , decltype(_impl_.deadline_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_impl_.bpmnprocessid_.Set(from._internal_bpmnprocessid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.elementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.elementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_elementid().empty()) {
    _this->_impl_.elementid_.Set(from._internal_elementid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.customheaders_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.customheaders_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_customheaders().empty()) {
    _this->_impl_.customheaders_.Set(from._internal_customheaders(), 
      _this->GetArenaForAllocation());
  }
  _impl_.worker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worker_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worker().empty()) {
    _this->_impl_.worker_.Set(from._internal_worker(), 
      _this->GetArenaForAllocation());
  }
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.key_, &from._impl_.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.deadline_) -
    reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.deadline_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ActivatedJob)
}

inline void ActivatedJob::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.elementid_){}
    , decltype(_impl_.customheaders_){}
    , decltype(_impl_.worker_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.key_){int64_t{0}}
    , decltype(_impl_.processinstancekey_){int64_t{0}}
    , decltype(_impl_.processdefinitionkey_){int64_t{0}}
    , decltype(_impl_.elementinstancekey_){int64_t{0}}
    , decltype(_impl_.processdefinitionversion_){0}
    , decltype(_impl_.retries_){0}
    , decltype(_impl_.deadline_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.elementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.elementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.customheaders_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.customheaders_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worker_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActivatedJob::~ActivatedJob() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ActivatedJob)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActivatedJob::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
  _impl_.bpmnprocessid_.Destroy();
  _impl_.elementid_.Destroy();
  _impl_.customheaders_.Destroy();
  _impl_.worker_.Destroy();
  _impl_.variables_.Destroy();
}

void ActivatedJob::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActivatedJob::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ActivatedJob)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.bpmnprocessid_.ClearToEmpty();
  _impl_.elementid_.ClearToEmpty();
  _impl_.customheaders_.ClearToEmpty();
  _impl_.worker_.ClearToEmpty();
  _impl_.variables_.ClearToEmpty();
  ::memset(&_impl_.key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.deadline_) -
      reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.deadline_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivatedJob::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivatedJob.type"));
        } else
          goto handle_unusual;
        continue;
      // int64 processInstanceKey = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.processinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bpmnProcessId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_bpmnprocessid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivatedJob.bpmnProcessId"));
        } else
          goto handle_unusual;
        continue;
      // int32 processDefinitionVersion = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.processdefinitionversion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 processDefinitionKey = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.processdefinitionkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string elementId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_elementid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivatedJob.elementId"));
        } else
          goto handle_unusual;
        continue;
      // int64 elementInstanceKey = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.elementinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string customHeaders = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_customheaders();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivatedJob.customHeaders"));
        } else
          goto handle_unusual;
        continue;
      // string worker = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_worker();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivatedJob.worker"));
        } else
          goto handle_unusual;
        continue;
      // int32 retries = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.retries_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 deadline = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.deadline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string variables = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ActivatedJob.variables"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivatedJob::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ActivatedJob)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_key(), target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivatedJob.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // int64 processInstanceKey = 3;
  if (this->_internal_processinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_processinstancekey(), target);
  }

  // string bpmnProcessId = 4;
  if (!this->_internal_bpmnprocessid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bpmnprocessid().data(), static_cast<int>(this->_internal_bpmnprocessid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivatedJob.bpmnProcessId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_bpmnprocessid(), target);
  }

  // int32 processDefinitionVersion = 5;
  if (this->_internal_processdefinitionversion() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_processdefinitionversion(), target);
  }

  // int64 processDefinitionKey = 6;
  if (this->_internal_processdefinitionkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_processdefinitionkey(), target);
  }

  // string elementId = 7;
  if (!this->_internal_elementid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_elementid().data(), static_cast<int>(this->_internal_elementid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivatedJob.elementId");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_elementid(), target);
  }

  // int64 elementInstanceKey = 8;
  if (this->_internal_elementinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_elementinstancekey(), target);
  }

  // string customHeaders = 9;
  if (!this->_internal_customheaders().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customheaders().data(), static_cast<int>(this->_internal_customheaders().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivatedJob.customHeaders");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_customheaders(), target);
  }

  // string worker = 10;
  if (!this->_internal_worker().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker().data(), static_cast<int>(this->_internal_worker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivatedJob.worker");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_worker(), target);
  }

  // int32 retries = 11;
  if (this->_internal_retries() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_retries(), target);
  }

  // int64 deadline = 12;
  if (this->_internal_deadline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(12, this->_internal_deadline(), target);
  }

  // string variables = 13;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ActivatedJob.variables");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_variables(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ActivatedJob)
  return target;
}

size_t ActivatedJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ActivatedJob)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string bpmnProcessId = 4;
  if (!this->_internal_bpmnprocessid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bpmnprocessid());
  }

  // string elementId = 7;
  if (!this->_internal_elementid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_elementid());
  }

  // string customHeaders = 9;
  if (!this->_internal_customheaders().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customheaders());
  }

  // string worker = 10;
  if (!this->_internal_worker().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker());
  }

  // string variables = 13;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_key());
  }

  // int64 processInstanceKey = 3;
  if (this->_internal_processinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processinstancekey());
  }

  // int64 processDefinitionKey = 6;
  if (this->_internal_processdefinitionkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processdefinitionkey());
  }

  // int64 elementInstanceKey = 8;
  if (this->_internal_elementinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_elementinstancekey());
  }

  // int32 processDefinitionVersion = 5;
  if (this->_internal_processdefinitionversion() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_processdefinitionversion());
  }

  // int32 retries = 11;
  if (this->_internal_retries() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retries());
  }

  // int64 deadline = 12;
  if (this->_internal_deadline() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_deadline());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivatedJob::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActivatedJob::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivatedJob::GetClassData() const { return &_class_data_; }


void ActivatedJob::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActivatedJob*>(&to_msg);
  auto& from = static_cast<const ActivatedJob&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ActivatedJob)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_internal_set_bpmnprocessid(from._internal_bpmnprocessid());
  }
  if (!from._internal_elementid().empty()) {
    _this->_internal_set_elementid(from._internal_elementid());
  }
  if (!from._internal_customheaders().empty()) {
    _this->_internal_set_customheaders(from._internal_customheaders());
  }
  if (!from._internal_worker().empty()) {
    _this->_internal_set_worker(from._internal_worker());
  }
  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_processinstancekey() != 0) {
    _this->_internal_set_processinstancekey(from._internal_processinstancekey());
  }
  if (from._internal_processdefinitionkey() != 0) {
    _this->_internal_set_processdefinitionkey(from._internal_processdefinitionkey());
  }
  if (from._internal_elementinstancekey() != 0) {
    _this->_internal_set_elementinstancekey(from._internal_elementinstancekey());
  }
  if (from._internal_processdefinitionversion() != 0) {
    _this->_internal_set_processdefinitionversion(from._internal_processdefinitionversion());
  }
  if (from._internal_retries() != 0) {
    _this->_internal_set_retries(from._internal_retries());
  }
  if (from._internal_deadline() != 0) {
    _this->_internal_set_deadline(from._internal_deadline());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivatedJob::CopyFrom(const ActivatedJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ActivatedJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivatedJob::IsInitialized() const {
  return true;
}

void ActivatedJob::InternalSwap(ActivatedJob* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bpmnprocessid_, lhs_arena,
      &other->_impl_.bpmnprocessid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.elementid_, lhs_arena,
      &other->_impl_.elementid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.customheaders_, lhs_arena,
      &other->_impl_.customheaders_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worker_, lhs_arena,
      &other->_impl_.worker_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActivatedJob, _impl_.deadline_)
      + sizeof(ActivatedJob::_impl_.deadline_)
      - PROTOBUF_FIELD_OFFSET(ActivatedJob, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivatedJob::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[2]);
}

// ===================================================================

class CancelProcessInstanceRequest::_Internal {
 public:
};

CancelProcessInstanceRequest::CancelProcessInstanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CancelProcessInstanceRequest)
}
CancelProcessInstanceRequest::CancelProcessInstanceRequest(const CancelProcessInstanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CancelProcessInstanceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.processinstancekey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.processinstancekey_ = from._impl_.processinstancekey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CancelProcessInstanceRequest)
}

inline void CancelProcessInstanceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.processinstancekey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CancelProcessInstanceRequest::~CancelProcessInstanceRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.CancelProcessInstanceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CancelProcessInstanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CancelProcessInstanceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CancelProcessInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.CancelProcessInstanceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.processinstancekey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelProcessInstanceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 processInstanceKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.processinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CancelProcessInstanceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.CancelProcessInstanceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 processInstanceKey = 1;
  if (this->_internal_processinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_processinstancekey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.CancelProcessInstanceRequest)
  return target;
}

size_t CancelProcessInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.CancelProcessInstanceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 processInstanceKey = 1;
  if (this->_internal_processinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processinstancekey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelProcessInstanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CancelProcessInstanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelProcessInstanceRequest::GetClassData() const { return &_class_data_; }


void CancelProcessInstanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CancelProcessInstanceRequest*>(&to_msg);
  auto& from = static_cast<const CancelProcessInstanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.CancelProcessInstanceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_processinstancekey() != 0) {
    _this->_internal_set_processinstancekey(from._internal_processinstancekey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelProcessInstanceRequest::CopyFrom(const CancelProcessInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.CancelProcessInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelProcessInstanceRequest::IsInitialized() const {
  return true;
}

void CancelProcessInstanceRequest::InternalSwap(CancelProcessInstanceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.processinstancekey_, other->_impl_.processinstancekey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelProcessInstanceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[3]);
}

// ===================================================================

class CancelProcessInstanceResponse::_Internal {
 public:
};

CancelProcessInstanceResponse::CancelProcessInstanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CancelProcessInstanceResponse)
}
CancelProcessInstanceResponse::CancelProcessInstanceResponse(const CancelProcessInstanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CancelProcessInstanceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CancelProcessInstanceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelProcessInstanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelProcessInstanceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CancelProcessInstanceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[4]);
}

// ===================================================================

class CompleteJobRequest::_Internal {
 public:
};

CompleteJobRequest::CompleteJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CompleteJobRequest)
}
CompleteJobRequest::CompleteJobRequest(const CompleteJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CompleteJobRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){}
    , decltype(_impl_.jobkey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.jobkey_ = from._impl_.jobkey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CompleteJobRequest)
}

inline void CompleteJobRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){}
    , decltype(_impl_.jobkey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CompleteJobRequest::~CompleteJobRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.CompleteJobRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CompleteJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.variables_.Destroy();
}

void CompleteJobRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CompleteJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.CompleteJobRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variables_.ClearToEmpty();
  _impl_.jobkey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompleteJobRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 jobKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.jobkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string variables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CompleteJobRequest.variables"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompleteJobRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.CompleteJobRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_jobkey(), target);
  }

  // string variables = 2;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CompleteJobRequest.variables");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_variables(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.CompleteJobRequest)
  return target;
}

size_t CompleteJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.CompleteJobRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string variables = 2;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_jobkey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompleteJobRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CompleteJobRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompleteJobRequest::GetClassData() const { return &_class_data_; }


void CompleteJobRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CompleteJobRequest*>(&to_msg);
  auto& from = static_cast<const CompleteJobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.CompleteJobRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (from._internal_jobkey() != 0) {
    _this->_internal_set_jobkey(from._internal_jobkey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompleteJobRequest::CopyFrom(const CompleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.CompleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteJobRequest::IsInitialized() const {
  return true;
}

void CompleteJobRequest::InternalSwap(CompleteJobRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  swap(_impl_.jobkey_, other->_impl_.jobkey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompleteJobRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[5]);
}

// ===================================================================

class CompleteJobResponse::_Internal {
 public:
};

CompleteJobResponse::CompleteJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CompleteJobResponse)
}
CompleteJobResponse::CompleteJobResponse(const CompleteJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CompleteJobResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CompleteJobResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompleteJobResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompleteJobResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CompleteJobResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[6]);
}

// ===================================================================

class CreateProcessInstanceRequest::_Internal {
 public:
};

CreateProcessInstanceRequest::CreateProcessInstanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CreateProcessInstanceRequest)
}
CreateProcessInstanceRequest::CreateProcessInstanceRequest(const CreateProcessInstanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProcessInstanceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.startinstructions_){from._impl_.startinstructions_}
    , decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.processdefinitionkey_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_impl_.bpmnprocessid_.Set(from._internal_bpmnprocessid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.processdefinitionkey_, &from._impl_.processdefinitionkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CreateProcessInstanceRequest)
}

inline void CreateProcessInstanceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.startinstructions_){arena}
    , decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.processdefinitionkey_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateProcessInstanceRequest::~CreateProcessInstanceRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.CreateProcessInstanceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProcessInstanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.startinstructions_.~RepeatedPtrField();
  _impl_.bpmnprocessid_.Destroy();
  _impl_.variables_.Destroy();
}

void CreateProcessInstanceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProcessInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.CreateProcessInstanceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.startinstructions_.Clear();
  _impl_.bpmnprocessid_.ClearToEmpty();
  _impl_.variables_.ClearToEmpty();
  ::memset(&_impl_.processdefinitionkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProcessInstanceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 processDefinitionKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.processdefinitionkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bpmnProcessId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bpmnprocessid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CreateProcessInstanceRequest.bpmnProcessId"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string variables = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CreateProcessInstanceRequest.variables"));
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.ProcessInstanceCreationStartInstruction startInstructions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_startinstructions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProcessInstanceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.CreateProcessInstanceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 processDefinitionKey = 1;
  if (this->_internal_processdefinitionkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_processdefinitionkey(), target);
  }

  // string bpmnProcessId = 2;
  if (!this->_internal_bpmnprocessid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bpmnprocessid().data(), static_cast<int>(this->_internal_bpmnprocessid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CreateProcessInstanceRequest.bpmnProcessId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bpmnprocessid(), target);
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_version(), target);
  }

  // string variables = 4;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CreateProcessInstanceRequest.variables");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_variables(), target);
  }

  // repeated .gateway_protocol.ProcessInstanceCreationStartInstruction startInstructions = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_startinstructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_startinstructions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.CreateProcessInstanceRequest)
  return target;
}

size_t CreateProcessInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.CreateProcessInstanceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.ProcessInstanceCreationStartInstruction startInstructions = 5;
  total_size += 1UL * this->_internal_startinstructions_size();
  for (const auto& msg : this->_impl_.startinstructions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string bpmnProcessId = 2;
  if (!this->_internal_bpmnprocessid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bpmnprocessid());
  }

  // string variables = 4;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // int64 processDefinitionKey = 1;
  if (this->_internal_processdefinitionkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processdefinitionkey());
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProcessInstanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProcessInstanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProcessInstanceRequest::GetClassData() const { return &_class_data_; }


void CreateProcessInstanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProcessInstanceRequest*>(&to_msg);
  auto& from = static_cast<const CreateProcessInstanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.CreateProcessInstanceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.startinstructions_.MergeFrom(from._impl_.startinstructions_);
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_internal_set_bpmnprocessid(from._internal_bpmnprocessid());
  }
  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (from._internal_processdefinitionkey() != 0) {
    _this->_internal_set_processdefinitionkey(from._internal_processdefinitionkey());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProcessInstanceRequest::CopyFrom(const CreateProcessInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.CreateProcessInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProcessInstanceRequest::IsInitialized() const {
  return true;
}

void CreateProcessInstanceRequest::InternalSwap(CreateProcessInstanceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.startinstructions_.InternalSwap(&other->_impl_.startinstructions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bpmnprocessid_, lhs_arena,
      &other->_impl_.bpmnprocessid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProcessInstanceRequest, _impl_.version_)
      + sizeof(CreateProcessInstanceRequest::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CreateProcessInstanceRequest, _impl_.processdefinitionkey_)>(
          reinterpret_cast<char*>(&_impl_.processdefinitionkey_),
          reinterpret_cast<char*>(&other->_impl_.processdefinitionkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProcessInstanceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[7]);
}

// ===================================================================

class ProcessInstanceCreationStartInstruction::_Internal {
 public:
};

ProcessInstanceCreationStartInstruction::ProcessInstanceCreationStartInstruction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ProcessInstanceCreationStartInstruction)
}
ProcessInstanceCreationStartInstruction::ProcessInstanceCreationStartInstruction(const ProcessInstanceCreationStartInstruction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProcessInstanceCreationStartInstruction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.elementid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.elementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.elementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_elementid().empty()) {
    _this->_impl_.elementid_.Set(from._internal_elementid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ProcessInstanceCreationStartInstruction)
}

inline void ProcessInstanceCreationStartInstruction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.elementid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.elementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.elementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProcessInstanceCreationStartInstruction::~ProcessInstanceCreationStartInstruction() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ProcessInstanceCreationStartInstruction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProcessInstanceCreationStartInstruction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.elementid_.Destroy();
}

void ProcessInstanceCreationStartInstruction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProcessInstanceCreationStartInstruction::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ProcessInstanceCreationStartInstruction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elementid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessInstanceCreationStartInstruction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string elementId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_elementid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ProcessInstanceCreationStartInstruction.elementId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProcessInstanceCreationStartInstruction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ProcessInstanceCreationStartInstruction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string elementId = 1;
  if (!this->_internal_elementid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_elementid().data(), static_cast<int>(this->_internal_elementid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ProcessInstanceCreationStartInstruction.elementId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_elementid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ProcessInstanceCreationStartInstruction)
  return target;
}

size_t ProcessInstanceCreationStartInstruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ProcessInstanceCreationStartInstruction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string elementId = 1;
  if (!this->_internal_elementid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_elementid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessInstanceCreationStartInstruction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProcessInstanceCreationStartInstruction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessInstanceCreationStartInstruction::GetClassData() const { return &_class_data_; }


void ProcessInstanceCreationStartInstruction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProcessInstanceCreationStartInstruction*>(&to_msg);
  auto& from = static_cast<const ProcessInstanceCreationStartInstruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ProcessInstanceCreationStartInstruction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_elementid().empty()) {
    _this->_internal_set_elementid(from._internal_elementid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessInstanceCreationStartInstruction::CopyFrom(const ProcessInstanceCreationStartInstruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ProcessInstanceCreationStartInstruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessInstanceCreationStartInstruction::IsInitialized() const {
  return true;
}

void ProcessInstanceCreationStartInstruction::InternalSwap(ProcessInstanceCreationStartInstruction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.elementid_, lhs_arena,
      &other->_impl_.elementid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessInstanceCreationStartInstruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[8]);
}

// ===================================================================

class CreateProcessInstanceResponse::_Internal {
 public:
};

CreateProcessInstanceResponse::CreateProcessInstanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CreateProcessInstanceResponse)
}
CreateProcessInstanceResponse::CreateProcessInstanceResponse(const CreateProcessInstanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProcessInstanceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.processdefinitionkey_){}
    , decltype(_impl_.processinstancekey_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_impl_.bpmnprocessid_.Set(from._internal_bpmnprocessid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.processdefinitionkey_, &from._impl_.processdefinitionkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CreateProcessInstanceResponse)
}

inline void CreateProcessInstanceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.processdefinitionkey_){int64_t{0}}
    , decltype(_impl_.processinstancekey_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateProcessInstanceResponse::~CreateProcessInstanceResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.CreateProcessInstanceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProcessInstanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bpmnprocessid_.Destroy();
}

void CreateProcessInstanceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProcessInstanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.CreateProcessInstanceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bpmnprocessid_.ClearToEmpty();
  ::memset(&_impl_.processdefinitionkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProcessInstanceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 processDefinitionKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.processdefinitionkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bpmnProcessId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bpmnprocessid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CreateProcessInstanceResponse.bpmnProcessId"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 processInstanceKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.processinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProcessInstanceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.CreateProcessInstanceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 processDefinitionKey = 1;
  if (this->_internal_processdefinitionkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_processdefinitionkey(), target);
  }

  // string bpmnProcessId = 2;
  if (!this->_internal_bpmnprocessid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bpmnprocessid().data(), static_cast<int>(this->_internal_bpmnprocessid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CreateProcessInstanceResponse.bpmnProcessId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bpmnprocessid(), target);
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_version(), target);
  }

  // int64 processInstanceKey = 4;
  if (this->_internal_processinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_processinstancekey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.CreateProcessInstanceResponse)
  return target;
}

size_t CreateProcessInstanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.CreateProcessInstanceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bpmnProcessId = 2;
  if (!this->_internal_bpmnprocessid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bpmnprocessid());
  }

  // int64 processDefinitionKey = 1;
  if (this->_internal_processdefinitionkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processdefinitionkey());
  }

  // int64 processInstanceKey = 4;
  if (this->_internal_processinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processinstancekey());
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProcessInstanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProcessInstanceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProcessInstanceResponse::GetClassData() const { return &_class_data_; }


void CreateProcessInstanceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProcessInstanceResponse*>(&to_msg);
  auto& from = static_cast<const CreateProcessInstanceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.CreateProcessInstanceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bpmnprocessid().empty()) {
    _this->_internal_set_bpmnprocessid(from._internal_bpmnprocessid());
  }
  if (from._internal_processdefinitionkey() != 0) {
    _this->_internal_set_processdefinitionkey(from._internal_processdefinitionkey());
  }
  if (from._internal_processinstancekey() != 0) {
    _this->_internal_set_processinstancekey(from._internal_processinstancekey());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProcessInstanceResponse::CopyFrom(const CreateProcessInstanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.CreateProcessInstanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProcessInstanceResponse::IsInitialized() const {
  return true;
}

void CreateProcessInstanceResponse::InternalSwap(CreateProcessInstanceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bpmnprocessid_, lhs_arena,
      &other->_impl_.bpmnprocessid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProcessInstanceResponse, _impl_.version_)
      + sizeof(CreateProcessInstanceResponse::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CreateProcessInstanceResponse, _impl_.processdefinitionkey_)>(
          reinterpret_cast<char*>(&_impl_.processdefinitionkey_),
          reinterpret_cast<char*>(&other->_impl_.processdefinitionkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProcessInstanceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[9]);
}

// ===================================================================

class CreateProcessInstanceWithResultRequest::_Internal {
 public:
  static const ::gateway_protocol::CreateProcessInstanceRequest& request(const CreateProcessInstanceWithResultRequest* msg);
};

const ::gateway_protocol::CreateProcessInstanceRequest&
CreateProcessInstanceWithResultRequest::_Internal::request(const CreateProcessInstanceWithResultRequest* msg) {
  return *msg->_impl_.request_;
}
CreateProcessInstanceWithResultRequest::CreateProcessInstanceWithResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CreateProcessInstanceWithResultRequest)
}
CreateProcessInstanceWithResultRequest::CreateProcessInstanceWithResultRequest(const CreateProcessInstanceWithResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProcessInstanceWithResultRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fetchvariables_){from._impl_.fetchvariables_}
    , decltype(_impl_.request_){nullptr}
    , decltype(_impl_.requesttimeout_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_request()) {
    _this->_impl_.request_ = new ::gateway_protocol::CreateProcessInstanceRequest(*from._impl_.request_);
  }
  _this->_impl_.requesttimeout_ = from._impl_.requesttimeout_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CreateProcessInstanceWithResultRequest)
}

inline void CreateProcessInstanceWithResultRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fetchvariables_){arena}
    , decltype(_impl_.request_){nullptr}
    , decltype(_impl_.requesttimeout_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateProcessInstanceWithResultRequest::~CreateProcessInstanceWithResultRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.CreateProcessInstanceWithResultRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProcessInstanceWithResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fetchvariables_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.request_;
}

void CreateProcessInstanceWithResultRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProcessInstanceWithResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.CreateProcessInstanceWithResultRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fetchvariables_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.request_ != nullptr) {
    delete _impl_.request_;
  }
  _impl_.request_ = nullptr;
  _impl_.requesttimeout_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProcessInstanceWithResultRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .gateway_protocol.CreateProcessInstanceRequest request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 requestTimeout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.requesttimeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string fetchVariables = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_fetchvariables();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CreateProcessInstanceWithResultRequest.fetchVariables"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProcessInstanceWithResultRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.CreateProcessInstanceWithResultRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .gateway_protocol.CreateProcessInstanceRequest request = 1;
  if (this->_internal_has_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::request(this),
        _Internal::request(this).GetCachedSize(), target, stream);
  }

  // int64 requestTimeout = 2;
  if (this->_internal_requesttimeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_requesttimeout(), target);
  }

  // repeated string fetchVariables = 3;
  for (int i = 0, n = this->_internal_fetchvariables_size(); i < n; i++) {
    const auto& s = this->_internal_fetchvariables(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CreateProcessInstanceWithResultRequest.fetchVariables");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.CreateProcessInstanceWithResultRequest)
  return target;
}

size_t CreateProcessInstanceWithResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.CreateProcessInstanceWithResultRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string fetchVariables = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.fetchvariables_.size());
  for (int i = 0, n = _impl_.fetchvariables_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.fetchvariables_.Get(i));
  }

  // .gateway_protocol.CreateProcessInstanceRequest request = 1;
  if (this->_internal_has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.request_);
  }

  // int64 requestTimeout = 2;
  if (this->_internal_requesttimeout() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_requesttimeout());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProcessInstanceWithResultRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProcessInstanceWithResultRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProcessInstanceWithResultRequest::GetClassData() const { return &_class_data_; }


void CreateProcessInstanceWithResultRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProcessInstanceWithResultRequest*>(&to_msg);
  auto& from = static_cast<const CreateProcessInstanceWithResultRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.CreateProcessInstanceWithResultRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.fetchvariables_.MergeFrom(from._impl_.fetchvariables_);
  if (from._internal_has_request()) {
    _this->_internal_mutable_request()->::gateway_protocol::CreateProcessInstanceRequest::MergeFrom(
        from._internal_request());
  }
  if (from._internal_requesttimeout() != 0) {
    _this->_internal_set_requesttimeout(from._internal_requesttimeout());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProcessInstanceWithResultRequest::CopyFrom(const CreateProcessInstanceWithResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.CreateProcessInstanceWithResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProcessInstanceWithResultRequest::IsInitialized() const {
  return true;
}

void CreateProcessInstanceWithResultRequest::InternalSwap(CreateProcessInstanceWithResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fetchvariables_.InternalSwap(&other->_impl_.fetchvariables_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProcessInstanceWithResultRequest, _impl_.requesttimeout_)
      + sizeof(CreateProcessInstanceWithResultRequest::_impl_.requesttimeout_)
      - PROTOBUF_FIELD_OFFSET(CreateProcessInstanceWithResultRequest, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProcessInstanceWithResultRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[10]);
}

// ===================================================================

class CreateProcessInstanceWithResultResponse::_Internal {
 public:
};

CreateProcessInstanceWithResultResponse::CreateProcessInstanceWithResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.CreateProcessInstanceWithResultResponse)
}
CreateProcessInstanceWithResultResponse::CreateProcessInstanceWithResultResponse(const CreateProcessInstanceWithResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProcessInstanceWithResultResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.processdefinitionkey_){}
    , decltype(_impl_.processinstancekey_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_impl_.bpmnprocessid_.Set(from._internal_bpmnprocessid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.processdefinitionkey_, &from._impl_.processdefinitionkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.CreateProcessInstanceWithResultResponse)
}

inline void CreateProcessInstanceWithResultResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.processdefinitionkey_){int64_t{0}}
    , decltype(_impl_.processinstancekey_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateProcessInstanceWithResultResponse::~CreateProcessInstanceWithResultResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.CreateProcessInstanceWithResultResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProcessInstanceWithResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bpmnprocessid_.Destroy();
  _impl_.variables_.Destroy();
}

void CreateProcessInstanceWithResultResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProcessInstanceWithResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.CreateProcessInstanceWithResultResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bpmnprocessid_.ClearToEmpty();
  _impl_.variables_.ClearToEmpty();
  ::memset(&_impl_.processdefinitionkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProcessInstanceWithResultResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 processDefinitionKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.processdefinitionkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bpmnProcessId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bpmnprocessid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CreateProcessInstanceWithResultResponse.bpmnProcessId"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 processInstanceKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.processinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string variables = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.CreateProcessInstanceWithResultResponse.variables"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProcessInstanceWithResultResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.CreateProcessInstanceWithResultResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 processDefinitionKey = 1;
  if (this->_internal_processdefinitionkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_processdefinitionkey(), target);
  }

  // string bpmnProcessId = 2;
  if (!this->_internal_bpmnprocessid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bpmnprocessid().data(), static_cast<int>(this->_internal_bpmnprocessid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CreateProcessInstanceWithResultResponse.bpmnProcessId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bpmnprocessid(), target);
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_version(), target);
  }

  // int64 processInstanceKey = 4;
  if (this->_internal_processinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_processinstancekey(), target);
  }

  // string variables = 5;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.CreateProcessInstanceWithResultResponse.variables");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_variables(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.CreateProcessInstanceWithResultResponse)
  return target;
}

size_t CreateProcessInstanceWithResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.CreateProcessInstanceWithResultResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bpmnProcessId = 2;
  if (!this->_internal_bpmnprocessid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bpmnprocessid());
  }

  // string variables = 5;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // int64 processDefinitionKey = 1;
  if (this->_internal_processdefinitionkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processdefinitionkey());
  }

  // int64 processInstanceKey = 4;
  if (this->_internal_processinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processinstancekey());
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProcessInstanceWithResultResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProcessInstanceWithResultResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProcessInstanceWithResultResponse::GetClassData() const { return &_class_data_; }


void CreateProcessInstanceWithResultResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProcessInstanceWithResultResponse*>(&to_msg);
  auto& from = static_cast<const CreateProcessInstanceWithResultResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.CreateProcessInstanceWithResultResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bpmnprocessid().empty()) {
    _this->_internal_set_bpmnprocessid(from._internal_bpmnprocessid());
  }
  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (from._internal_processdefinitionkey() != 0) {
    _this->_internal_set_processdefinitionkey(from._internal_processdefinitionkey());
  }
  if (from._internal_processinstancekey() != 0) {
    _this->_internal_set_processinstancekey(from._internal_processinstancekey());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProcessInstanceWithResultResponse::CopyFrom(const CreateProcessInstanceWithResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.CreateProcessInstanceWithResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProcessInstanceWithResultResponse::IsInitialized() const {
  return true;
}

void CreateProcessInstanceWithResultResponse::InternalSwap(CreateProcessInstanceWithResultResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bpmnprocessid_, lhs_arena,
      &other->_impl_.bpmnprocessid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProcessInstanceWithResultResponse, _impl_.version_)
      + sizeof(CreateProcessInstanceWithResultResponse::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CreateProcessInstanceWithResultResponse, _impl_.processdefinitionkey_)>(
          reinterpret_cast<char*>(&_impl_.processdefinitionkey_),
          reinterpret_cast<char*>(&other->_impl_.processdefinitionkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProcessInstanceWithResultResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[11]);
}

// ===================================================================

class DeployProcessRequest::_Internal {
 public:
};

DeployProcessRequest::DeployProcessRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.DeployProcessRequest)
}
DeployProcessRequest::DeployProcessRequest(const DeployProcessRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployProcessRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.processes_){from._impl_.processes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.DeployProcessRequest)
}

inline void DeployProcessRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.processes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeployProcessRequest::~DeployProcessRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.DeployProcessRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployProcessRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.processes_.~RepeatedPtrField();
}

void DeployProcessRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployProcessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.DeployProcessRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.processes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployProcessRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .gateway_protocol.ProcessRequestObject processes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_processes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployProcessRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.DeployProcessRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gateway_protocol.ProcessRequestObject processes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_processes_size()); i < n; i++) {
    const auto& repfield = this->_internal_processes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.DeployProcessRequest)
  return target;
}

size_t DeployProcessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.DeployProcessRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.ProcessRequestObject processes = 1;
  total_size += 1UL * this->_internal_processes_size();
  for (const auto& msg : this->_impl_.processes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployProcessRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployProcessRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployProcessRequest::GetClassData() const { return &_class_data_; }


void DeployProcessRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployProcessRequest*>(&to_msg);
  auto& from = static_cast<const DeployProcessRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.DeployProcessRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.processes_.MergeFrom(from._impl_.processes_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployProcessRequest::CopyFrom(const DeployProcessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.DeployProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployProcessRequest::IsInitialized() const {
  return true;
}

void DeployProcessRequest::InternalSwap(DeployProcessRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.processes_.InternalSwap(&other->_impl_.processes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployProcessRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[12]);
}

// ===================================================================

class ProcessRequestObject::_Internal {
 public:
};

ProcessRequestObject::ProcessRequestObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ProcessRequestObject)
}
ProcessRequestObject::ProcessRequestObject(const ProcessRequestObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProcessRequestObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.definition_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_definition().empty()) {
    _this->_impl_.definition_.Set(from._internal_definition(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ProcessRequestObject)
}

inline void ProcessRequestObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.definition_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProcessRequestObject::~ProcessRequestObject() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ProcessRequestObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProcessRequestObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.definition_.Destroy();
}

void ProcessRequestObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProcessRequestObject::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ProcessRequestObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.definition_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessRequestObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ProcessRequestObject.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes definition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProcessRequestObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ProcessRequestObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ProcessRequestObject.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes definition = 2;
  if (!this->_internal_definition().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ProcessRequestObject)
  return target;
}

size_t ProcessRequestObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ProcessRequestObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes definition = 2;
  if (!this->_internal_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_definition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessRequestObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProcessRequestObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessRequestObject::GetClassData() const { return &_class_data_; }


void ProcessRequestObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProcessRequestObject*>(&to_msg);
  auto& from = static_cast<const ProcessRequestObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ProcessRequestObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_definition().empty()) {
    _this->_internal_set_definition(from._internal_definition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessRequestObject::CopyFrom(const ProcessRequestObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ProcessRequestObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessRequestObject::IsInitialized() const {
  return true;
}

void ProcessRequestObject::InternalSwap(ProcessRequestObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.definition_, lhs_arena,
      &other->_impl_.definition_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessRequestObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[13]);
}

// ===================================================================

class DeployProcessResponse::_Internal {
 public:
};

DeployProcessResponse::DeployProcessResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.DeployProcessResponse)
}
DeployProcessResponse::DeployProcessResponse(const DeployProcessResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployProcessResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.processes_){from._impl_.processes_}
    , decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.key_ = from._impl_.key_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.DeployProcessResponse)
}

inline void DeployProcessResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.processes_){arena}
    , decltype(_impl_.key_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeployProcessResponse::~DeployProcessResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.DeployProcessResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployProcessResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.processes_.~RepeatedPtrField();
}

void DeployProcessResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployProcessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.DeployProcessResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.processes_.Clear();
  _impl_.key_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployProcessResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.ProcessMetadata processes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_processes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployProcessResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.DeployProcessResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_key(), target);
  }

  // repeated .gateway_protocol.ProcessMetadata processes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_processes_size()); i < n; i++) {
    const auto& repfield = this->_internal_processes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.DeployProcessResponse)
  return target;
}

size_t DeployProcessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.DeployProcessResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.ProcessMetadata processes = 2;
  total_size += 1UL * this->_internal_processes_size();
  for (const auto& msg : this->_impl_.processes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployProcessResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployProcessResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployProcessResponse::GetClassData() const { return &_class_data_; }


void DeployProcessResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployProcessResponse*>(&to_msg);
  auto& from = static_cast<const DeployProcessResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.DeployProcessResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.processes_.MergeFrom(from._impl_.processes_);
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployProcessResponse::CopyFrom(const DeployProcessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.DeployProcessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployProcessResponse::IsInitialized() const {
  return true;
}

void DeployProcessResponse::InternalSwap(DeployProcessResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.processes_.InternalSwap(&other->_impl_.processes_);
  swap(_impl_.key_, other->_impl_.key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployProcessResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[14]);
}

// ===================================================================

class DeployResourceRequest::_Internal {
 public:
};

DeployResourceRequest::DeployResourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.DeployResourceRequest)
}
DeployResourceRequest::DeployResourceRequest(const DeployResourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployResourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){from._impl_.resources_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.DeployResourceRequest)
}

inline void DeployResourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeployResourceRequest::~DeployResourceRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.DeployResourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployResourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resources_.~RepeatedPtrField();
}

void DeployResourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.DeployResourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resources_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployResourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .gateway_protocol.Resource resources = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployResourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.DeployResourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gateway_protocol.Resource resources = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.DeployResourceRequest)
  return target;
}

size_t DeployResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.DeployResourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.Resource resources = 1;
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->_impl_.resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployResourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployResourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployResourceRequest::GetClassData() const { return &_class_data_; }


void DeployResourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployResourceRequest*>(&to_msg);
  auto& from = static_cast<const DeployResourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.DeployResourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resources_.MergeFrom(from._impl_.resources_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployResourceRequest::CopyFrom(const DeployResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.DeployResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployResourceRequest::IsInitialized() const {
  return true;
}

void DeployResourceRequest::InternalSwap(DeployResourceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resources_.InternalSwap(&other->_impl_.resources_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployResourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[15]);
}

// ===================================================================

class Resource::_Internal {
 public:
};

Resource::Resource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.Resource)
}
Resource::Resource(const Resource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Resource* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.Resource)
}

inline void Resource::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Resource::~Resource() {
  // @@protoc_insertion_point(destructor:gateway_protocol.Resource)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Resource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
}

void Resource::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.Resource)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Resource::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.Resource.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Resource::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.Resource)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.Resource.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.Resource)
  return target;
}

size_t Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.Resource)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Resource::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Resource::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Resource::GetClassData() const { return &_class_data_; }


void Resource::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Resource*>(&to_msg);
  auto& from = static_cast<const Resource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.Resource)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Resource::CopyFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resource::IsInitialized() const {
  return true;
}

void Resource::InternalSwap(Resource* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Resource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[16]);
}

// ===================================================================

class DeployResourceResponse::_Internal {
 public:
};

DeployResourceResponse::DeployResourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.DeployResourceResponse)
}
DeployResourceResponse::DeployResourceResponse(const DeployResourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployResourceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.deployments_){from._impl_.deployments_}
    , decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.key_ = from._impl_.key_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.DeployResourceResponse)
}

inline void DeployResourceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.deployments_){arena}
    , decltype(_impl_.key_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeployResourceResponse::~DeployResourceResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.DeployResourceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployResourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.deployments_.~RepeatedPtrField();
}

void DeployResourceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployResourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.DeployResourceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.deployments_.Clear();
  _impl_.key_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployResourceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.Deployment deployments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_deployments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployResourceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.DeployResourceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_key(), target);
  }

  // repeated .gateway_protocol.Deployment deployments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_deployments_size()); i < n; i++) {
    const auto& repfield = this->_internal_deployments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.DeployResourceResponse)
  return target;
}

size_t DeployResourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.DeployResourceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.Deployment deployments = 2;
  total_size += 1UL * this->_internal_deployments_size();
  for (const auto& msg : this->_impl_.deployments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployResourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployResourceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployResourceResponse::GetClassData() const { return &_class_data_; }


void DeployResourceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployResourceResponse*>(&to_msg);
  auto& from = static_cast<const DeployResourceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.DeployResourceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.deployments_.MergeFrom(from._impl_.deployments_);
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployResourceResponse::CopyFrom(const DeployResourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.DeployResourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployResourceResponse::IsInitialized() const {
  return true;
}

void DeployResourceResponse::InternalSwap(DeployResourceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.deployments_.InternalSwap(&other->_impl_.deployments_);
  swap(_impl_.key_, other->_impl_.key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployResourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[17]);
}

// ===================================================================

class Deployment::_Internal {
 public:
  static const ::gateway_protocol::ProcessMetadata& process(const Deployment* msg);
  static const ::gateway_protocol::DecisionMetadata& decision(const Deployment* msg);
  static const ::gateway_protocol::DecisionRequirementsMetadata& decisionrequirements(const Deployment* msg);
};

const ::gateway_protocol::ProcessMetadata&
Deployment::_Internal::process(const Deployment* msg) {
  return *msg->_impl_.Metadata_.process_;
}
const ::gateway_protocol::DecisionMetadata&
Deployment::_Internal::decision(const Deployment* msg) {
  return *msg->_impl_.Metadata_.decision_;
}
const ::gateway_protocol::DecisionRequirementsMetadata&
Deployment::_Internal::decisionrequirements(const Deployment* msg) {
  return *msg->_impl_.Metadata_.decisionrequirements_;
}
void Deployment::set_allocated_process(::gateway_protocol::ProcessMetadata* process) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Metadata();
  if (process) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(process);
    if (message_arena != submessage_arena) {
      process = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, process, submessage_arena);
    }
    set_has_process();
    _impl_.Metadata_.process_ = process;
  }
  // @@protoc_insertion_point(field_set_allocated:gateway_protocol.Deployment.process)
}
void Deployment::set_allocated_decision(::gateway_protocol::DecisionMetadata* decision) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Metadata();
  if (decision) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(decision);
    if (message_arena != submessage_arena) {
      decision = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, decision, submessage_arena);
    }
    set_has_decision();
    _impl_.Metadata_.decision_ = decision;
  }
  // @@protoc_insertion_point(field_set_allocated:gateway_protocol.Deployment.decision)
}
void Deployment::set_allocated_decisionrequirements(::gateway_protocol::DecisionRequirementsMetadata* decisionrequirements) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Metadata();
  if (decisionrequirements) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(decisionrequirements);
    if (message_arena != submessage_arena) {
      decisionrequirements = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, decisionrequirements, submessage_arena);
    }
    set_has_decisionrequirements();
    _impl_.Metadata_.decisionrequirements_ = decisionrequirements;
  }
  // @@protoc_insertion_point(field_set_allocated:gateway_protocol.Deployment.decisionRequirements)
}
Deployment::Deployment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.Deployment)
}
Deployment::Deployment(const Deployment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Deployment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Metadata();
  switch (from.Metadata_case()) {
    case kProcess: {
      _this->_internal_mutable_process()->::gateway_protocol::ProcessMetadata::MergeFrom(
          from._internal_process());
      break;
    }
    case kDecision: {
      _this->_internal_mutable_decision()->::gateway_protocol::DecisionMetadata::MergeFrom(
          from._internal_decision());
      break;
    }
    case kDecisionRequirements: {
      _this->_internal_mutable_decisionrequirements()->::gateway_protocol::DecisionRequirementsMetadata::MergeFrom(
          from._internal_decisionrequirements());
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.Deployment)
}

inline void Deployment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Metadata();
}

Deployment::~Deployment() {
  // @@protoc_insertion_point(destructor:gateway_protocol.Deployment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Deployment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Metadata()) {
    clear_Metadata();
  }
}

void Deployment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Deployment::clear_Metadata() {
// @@protoc_insertion_point(one_of_clear_start:gateway_protocol.Deployment)
  switch (Metadata_case()) {
    case kProcess: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Metadata_.process_;
      }
      break;
    }
    case kDecision: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Metadata_.decision_;
      }
      break;
    }
    case kDecisionRequirements: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Metadata_.decisionrequirements_;
      }
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = METADATA_NOT_SET;
}


void Deployment::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.Deployment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Metadata();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Deployment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .gateway_protocol.ProcessMetadata process = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_process(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gateway_protocol.DecisionMetadata decision = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_decision(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gateway_protocol.DecisionRequirementsMetadata decisionRequirements = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_decisionrequirements(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Deployment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.Deployment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .gateway_protocol.ProcessMetadata process = 1;
  if (_internal_has_process()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::process(this),
        _Internal::process(this).GetCachedSize(), target, stream);
  }

  // .gateway_protocol.DecisionMetadata decision = 2;
  if (_internal_has_decision()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::decision(this),
        _Internal::decision(this).GetCachedSize(), target, stream);
  }

  // .gateway_protocol.DecisionRequirementsMetadata decisionRequirements = 3;
  if (_internal_has_decisionrequirements()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::decisionrequirements(this),
        _Internal::decisionrequirements(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.Deployment)
  return target;
}

size_t Deployment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.Deployment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Metadata_case()) {
    // .gateway_protocol.ProcessMetadata process = 1;
    case kProcess: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Metadata_.process_);
      break;
    }
    // .gateway_protocol.DecisionMetadata decision = 2;
    case kDecision: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Metadata_.decision_);
      break;
    }
    // .gateway_protocol.DecisionRequirementsMetadata decisionRequirements = 3;
    case kDecisionRequirements: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Metadata_.decisionrequirements_);
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Deployment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Deployment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Deployment::GetClassData() const { return &_class_data_; }


void Deployment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Deployment*>(&to_msg);
  auto& from = static_cast<const Deployment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.Deployment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Metadata_case()) {
    case kProcess: {
      _this->_internal_mutable_process()->::gateway_protocol::ProcessMetadata::MergeFrom(
          from._internal_process());
      break;
    }
    case kDecision: {
      _this->_internal_mutable_decision()->::gateway_protocol::DecisionMetadata::MergeFrom(
          from._internal_decision());
      break;
    }
    case kDecisionRequirements: {
      _this->_internal_mutable_decisionrequirements()->::gateway_protocol::DecisionRequirementsMetadata::MergeFrom(
          from._internal_decisionrequirements());
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Deployment::CopyFrom(const Deployment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.Deployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deployment::IsInitialized() const {
  return true;
}

void Deployment::InternalSwap(Deployment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Metadata_, other->_impl_.Metadata_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Deployment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[18]);
}

// ===================================================================

class ProcessMetadata::_Internal {
 public:
};

ProcessMetadata::ProcessMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ProcessMetadata)
}
ProcessMetadata::ProcessMetadata(const ProcessMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProcessMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.resourcename_){}
    , decltype(_impl_.processdefinitionkey_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bpmnprocessid().empty()) {
    _this->_impl_.bpmnprocessid_.Set(from._internal_bpmnprocessid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.resourcename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resourcename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resourcename().empty()) {
    _this->_impl_.resourcename_.Set(from._internal_resourcename(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.processdefinitionkey_, &from._impl_.processdefinitionkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ProcessMetadata)
}

inline void ProcessMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bpmnprocessid_){}
    , decltype(_impl_.resourcename_){}
    , decltype(_impl_.processdefinitionkey_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bpmnprocessid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bpmnprocessid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resourcename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resourcename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProcessMetadata::~ProcessMetadata() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ProcessMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProcessMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bpmnprocessid_.Destroy();
  _impl_.resourcename_.Destroy();
}

void ProcessMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProcessMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ProcessMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bpmnprocessid_.ClearToEmpty();
  _impl_.resourcename_.ClearToEmpty();
  ::memset(&_impl_.processdefinitionkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.processdefinitionkey_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string bpmnProcessId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bpmnprocessid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ProcessMetadata.bpmnProcessId"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 processDefinitionKey = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.processdefinitionkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string resourceName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_resourcename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ProcessMetadata.resourceName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProcessMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ProcessMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string bpmnProcessId = 1;
  if (!this->_internal_bpmnprocessid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bpmnprocessid().data(), static_cast<int>(this->_internal_bpmnprocessid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ProcessMetadata.bpmnProcessId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bpmnprocessid(), target);
  }

  // int32 version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_version(), target);
  }

  // int64 processDefinitionKey = 3;
  if (this->_internal_processdefinitionkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_processdefinitionkey(), target);
  }

  // string resourceName = 4;
  if (!this->_internal_resourcename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resourcename().data(), static_cast<int>(this->_internal_resourcename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ProcessMetadata.resourceName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_resourcename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ProcessMetadata)
  return target;
}

size_t ProcessMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ProcessMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bpmnProcessId = 1;
  if (!this->_internal_bpmnprocessid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bpmnprocessid());
  }

  // string resourceName = 4;
  if (!this->_internal_resourcename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resourcename());
  }

  // int64 processDefinitionKey = 3;
  if (this->_internal_processdefinitionkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processdefinitionkey());
  }

  // int32 version = 2;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProcessMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessMetadata::GetClassData() const { return &_class_data_; }


void ProcessMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProcessMetadata*>(&to_msg);
  auto& from = static_cast<const ProcessMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ProcessMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bpmnprocessid().empty()) {
    _this->_internal_set_bpmnprocessid(from._internal_bpmnprocessid());
  }
  if (!from._internal_resourcename().empty()) {
    _this->_internal_set_resourcename(from._internal_resourcename());
  }
  if (from._internal_processdefinitionkey() != 0) {
    _this->_internal_set_processdefinitionkey(from._internal_processdefinitionkey());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessMetadata::CopyFrom(const ProcessMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ProcessMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessMetadata::IsInitialized() const {
  return true;
}

void ProcessMetadata::InternalSwap(ProcessMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bpmnprocessid_, lhs_arena,
      &other->_impl_.bpmnprocessid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resourcename_, lhs_arena,
      &other->_impl_.resourcename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProcessMetadata, _impl_.version_)
      + sizeof(ProcessMetadata::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(ProcessMetadata, _impl_.processdefinitionkey_)>(
          reinterpret_cast<char*>(&_impl_.processdefinitionkey_),
          reinterpret_cast<char*>(&other->_impl_.processdefinitionkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[19]);
}

// ===================================================================

class DecisionMetadata::_Internal {
 public:
};

DecisionMetadata::DecisionMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.DecisionMetadata)
}
DecisionMetadata::DecisionMetadata(const DecisionMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DecisionMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dmndecisionid_){}
    , decltype(_impl_.dmndecisionname_){}
    , decltype(_impl_.dmndecisionrequirementsid_){}
    , decltype(_impl_.decisionkey_){}
    , decltype(_impl_.decisionrequirementskey_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dmndecisionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dmndecisionid().empty()) {
    _this->_impl_.dmndecisionid_.Set(from._internal_dmndecisionid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.dmndecisionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dmndecisionname().empty()) {
    _this->_impl_.dmndecisionname_.Set(from._internal_dmndecisionname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.dmndecisionrequirementsid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionrequirementsid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dmndecisionrequirementsid().empty()) {
    _this->_impl_.dmndecisionrequirementsid_.Set(from._internal_dmndecisionrequirementsid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.decisionkey_, &from._impl_.decisionkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.decisionkey_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.DecisionMetadata)
}

inline void DecisionMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dmndecisionid_){}
    , decltype(_impl_.dmndecisionname_){}
    , decltype(_impl_.dmndecisionrequirementsid_){}
    , decltype(_impl_.decisionkey_){int64_t{0}}
    , decltype(_impl_.decisionrequirementskey_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dmndecisionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dmndecisionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dmndecisionrequirementsid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionrequirementsid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DecisionMetadata::~DecisionMetadata() {
  // @@protoc_insertion_point(destructor:gateway_protocol.DecisionMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DecisionMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dmndecisionid_.Destroy();
  _impl_.dmndecisionname_.Destroy();
  _impl_.dmndecisionrequirementsid_.Destroy();
}

void DecisionMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DecisionMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.DecisionMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dmndecisionid_.ClearToEmpty();
  _impl_.dmndecisionname_.ClearToEmpty();
  _impl_.dmndecisionrequirementsid_.ClearToEmpty();
  ::memset(&_impl_.decisionkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.decisionkey_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DecisionMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string dmnDecisionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_dmndecisionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.DecisionMetadata.dmnDecisionId"));
        } else
          goto handle_unusual;
        continue;
      // string dmnDecisionName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_dmndecisionname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.DecisionMetadata.dmnDecisionName"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 decisionKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.decisionkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dmnDecisionRequirementsId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dmndecisionrequirementsid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.DecisionMetadata.dmnDecisionRequirementsId"));
        } else
          goto handle_unusual;
        continue;
      // int64 decisionRequirementsKey = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.decisionrequirementskey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DecisionMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.DecisionMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string dmnDecisionId = 1;
  if (!this->_internal_dmndecisionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dmndecisionid().data(), static_cast<int>(this->_internal_dmndecisionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.DecisionMetadata.dmnDecisionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dmndecisionid(), target);
  }

  // string dmnDecisionName = 2;
  if (!this->_internal_dmndecisionname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dmndecisionname().data(), static_cast<int>(this->_internal_dmndecisionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.DecisionMetadata.dmnDecisionName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_dmndecisionname(), target);
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_version(), target);
  }

  // int64 decisionKey = 4;
  if (this->_internal_decisionkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_decisionkey(), target);
  }

  // string dmnDecisionRequirementsId = 5;
  if (!this->_internal_dmndecisionrequirementsid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dmndecisionrequirementsid().data(), static_cast<int>(this->_internal_dmndecisionrequirementsid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.DecisionMetadata.dmnDecisionRequirementsId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dmndecisionrequirementsid(), target);
  }

  // int64 decisionRequirementsKey = 6;
  if (this->_internal_decisionrequirementskey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_decisionrequirementskey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.DecisionMetadata)
  return target;
}

size_t DecisionMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.DecisionMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dmnDecisionId = 1;
  if (!this->_internal_dmndecisionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dmndecisionid());
  }

  // string dmnDecisionName = 2;
  if (!this->_internal_dmndecisionname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dmndecisionname());
  }

  // string dmnDecisionRequirementsId = 5;
  if (!this->_internal_dmndecisionrequirementsid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dmndecisionrequirementsid());
  }

  // int64 decisionKey = 4;
  if (this->_internal_decisionkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_decisionkey());
  }

  // int64 decisionRequirementsKey = 6;
  if (this->_internal_decisionrequirementskey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_decisionrequirementskey());
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DecisionMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DecisionMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DecisionMetadata::GetClassData() const { return &_class_data_; }


void DecisionMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DecisionMetadata*>(&to_msg);
  auto& from = static_cast<const DecisionMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.DecisionMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dmndecisionid().empty()) {
    _this->_internal_set_dmndecisionid(from._internal_dmndecisionid());
  }
  if (!from._internal_dmndecisionname().empty()) {
    _this->_internal_set_dmndecisionname(from._internal_dmndecisionname());
  }
  if (!from._internal_dmndecisionrequirementsid().empty()) {
    _this->_internal_set_dmndecisionrequirementsid(from._internal_dmndecisionrequirementsid());
  }
  if (from._internal_decisionkey() != 0) {
    _this->_internal_set_decisionkey(from._internal_decisionkey());
  }
  if (from._internal_decisionrequirementskey() != 0) {
    _this->_internal_set_decisionrequirementskey(from._internal_decisionrequirementskey());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DecisionMetadata::CopyFrom(const DecisionMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.DecisionMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecisionMetadata::IsInitialized() const {
  return true;
}

void DecisionMetadata::InternalSwap(DecisionMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dmndecisionid_, lhs_arena,
      &other->_impl_.dmndecisionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dmndecisionname_, lhs_arena,
      &other->_impl_.dmndecisionname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dmndecisionrequirementsid_, lhs_arena,
      &other->_impl_.dmndecisionrequirementsid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DecisionMetadata, _impl_.version_)
      + sizeof(DecisionMetadata::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(DecisionMetadata, _impl_.decisionkey_)>(
          reinterpret_cast<char*>(&_impl_.decisionkey_),
          reinterpret_cast<char*>(&other->_impl_.decisionkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DecisionMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[20]);
}

// ===================================================================

class DecisionRequirementsMetadata::_Internal {
 public:
};

DecisionRequirementsMetadata::DecisionRequirementsMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.DecisionRequirementsMetadata)
}
DecisionRequirementsMetadata::DecisionRequirementsMetadata(const DecisionRequirementsMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DecisionRequirementsMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dmndecisionrequirementsid_){}
    , decltype(_impl_.dmndecisionrequirementsname_){}
    , decltype(_impl_.resourcename_){}
    , decltype(_impl_.decisionrequirementskey_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dmndecisionrequirementsid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionrequirementsid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dmndecisionrequirementsid().empty()) {
    _this->_impl_.dmndecisionrequirementsid_.Set(from._internal_dmndecisionrequirementsid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.dmndecisionrequirementsname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionrequirementsname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dmndecisionrequirementsname().empty()) {
    _this->_impl_.dmndecisionrequirementsname_.Set(from._internal_dmndecisionrequirementsname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.resourcename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resourcename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resourcename().empty()) {
    _this->_impl_.resourcename_.Set(from._internal_resourcename(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.decisionrequirementskey_, &from._impl_.decisionrequirementskey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.decisionrequirementskey_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.DecisionRequirementsMetadata)
}

inline void DecisionRequirementsMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dmndecisionrequirementsid_){}
    , decltype(_impl_.dmndecisionrequirementsname_){}
    , decltype(_impl_.resourcename_){}
    , decltype(_impl_.decisionrequirementskey_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dmndecisionrequirementsid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionrequirementsid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dmndecisionrequirementsname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dmndecisionrequirementsname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resourcename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resourcename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DecisionRequirementsMetadata::~DecisionRequirementsMetadata() {
  // @@protoc_insertion_point(destructor:gateway_protocol.DecisionRequirementsMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DecisionRequirementsMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dmndecisionrequirementsid_.Destroy();
  _impl_.dmndecisionrequirementsname_.Destroy();
  _impl_.resourcename_.Destroy();
}

void DecisionRequirementsMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DecisionRequirementsMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.DecisionRequirementsMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dmndecisionrequirementsid_.ClearToEmpty();
  _impl_.dmndecisionrequirementsname_.ClearToEmpty();
  _impl_.resourcename_.ClearToEmpty();
  ::memset(&_impl_.decisionrequirementskey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.decisionrequirementskey_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DecisionRequirementsMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string dmnDecisionRequirementsId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_dmndecisionrequirementsid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.DecisionRequirementsMetadata.dmnDecisionRequirementsId"));
        } else
          goto handle_unusual;
        continue;
      // string dmnDecisionRequirementsName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_dmndecisionrequirementsname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.DecisionRequirementsMetadata.dmnDecisionRequirementsName"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 decisionRequirementsKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.decisionrequirementskey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string resourceName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_resourcename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.DecisionRequirementsMetadata.resourceName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DecisionRequirementsMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.DecisionRequirementsMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string dmnDecisionRequirementsId = 1;
  if (!this->_internal_dmndecisionrequirementsid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dmndecisionrequirementsid().data(), static_cast<int>(this->_internal_dmndecisionrequirementsid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.DecisionRequirementsMetadata.dmnDecisionRequirementsId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dmndecisionrequirementsid(), target);
  }

  // string dmnDecisionRequirementsName = 2;
  if (!this->_internal_dmndecisionrequirementsname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dmndecisionrequirementsname().data(), static_cast<int>(this->_internal_dmndecisionrequirementsname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.DecisionRequirementsMetadata.dmnDecisionRequirementsName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_dmndecisionrequirementsname(), target);
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_version(), target);
  }

  // int64 decisionRequirementsKey = 4;
  if (this->_internal_decisionrequirementskey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_decisionrequirementskey(), target);
  }

  // string resourceName = 5;
  if (!this->_internal_resourcename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resourcename().data(), static_cast<int>(this->_internal_resourcename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.DecisionRequirementsMetadata.resourceName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_resourcename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.DecisionRequirementsMetadata)
  return target;
}

size_t DecisionRequirementsMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.DecisionRequirementsMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dmnDecisionRequirementsId = 1;
  if (!this->_internal_dmndecisionrequirementsid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dmndecisionrequirementsid());
  }

  // string dmnDecisionRequirementsName = 2;
  if (!this->_internal_dmndecisionrequirementsname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dmndecisionrequirementsname());
  }

  // string resourceName = 5;
  if (!this->_internal_resourcename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resourcename());
  }

  // int64 decisionRequirementsKey = 4;
  if (this->_internal_decisionrequirementskey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_decisionrequirementskey());
  }

  // int32 version = 3;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DecisionRequirementsMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DecisionRequirementsMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DecisionRequirementsMetadata::GetClassData() const { return &_class_data_; }


void DecisionRequirementsMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DecisionRequirementsMetadata*>(&to_msg);
  auto& from = static_cast<const DecisionRequirementsMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.DecisionRequirementsMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dmndecisionrequirementsid().empty()) {
    _this->_internal_set_dmndecisionrequirementsid(from._internal_dmndecisionrequirementsid());
  }
  if (!from._internal_dmndecisionrequirementsname().empty()) {
    _this->_internal_set_dmndecisionrequirementsname(from._internal_dmndecisionrequirementsname());
  }
  if (!from._internal_resourcename().empty()) {
    _this->_internal_set_resourcename(from._internal_resourcename());
  }
  if (from._internal_decisionrequirementskey() != 0) {
    _this->_internal_set_decisionrequirementskey(from._internal_decisionrequirementskey());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DecisionRequirementsMetadata::CopyFrom(const DecisionRequirementsMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.DecisionRequirementsMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecisionRequirementsMetadata::IsInitialized() const {
  return true;
}

void DecisionRequirementsMetadata::InternalSwap(DecisionRequirementsMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dmndecisionrequirementsid_, lhs_arena,
      &other->_impl_.dmndecisionrequirementsid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dmndecisionrequirementsname_, lhs_arena,
      &other->_impl_.dmndecisionrequirementsname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resourcename_, lhs_arena,
      &other->_impl_.resourcename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DecisionRequirementsMetadata, _impl_.version_)
      + sizeof(DecisionRequirementsMetadata::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(DecisionRequirementsMetadata, _impl_.decisionrequirementskey_)>(
          reinterpret_cast<char*>(&_impl_.decisionrequirementskey_),
          reinterpret_cast<char*>(&other->_impl_.decisionrequirementskey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DecisionRequirementsMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[21]);
}

// ===================================================================

class FailJobRequest::_Internal {
 public:
};

FailJobRequest::FailJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.FailJobRequest)
}
FailJobRequest::FailJobRequest(const FailJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FailJobRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errormessage_){}
    , decltype(_impl_.jobkey_){}
    , decltype(_impl_.retrybackoff_){}
    , decltype(_impl_.retries_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.errormessage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errormessage_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errormessage().empty()) {
    _this->_impl_.errormessage_.Set(from._internal_errormessage(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.jobkey_, &from._impl_.jobkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.retries_) -
    reinterpret_cast<char*>(&_impl_.jobkey_)) + sizeof(_impl_.retries_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.FailJobRequest)
}

inline void FailJobRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errormessage_){}
    , decltype(_impl_.jobkey_){int64_t{0}}
    , decltype(_impl_.retrybackoff_){int64_t{0}}
    , decltype(_impl_.retries_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.errormessage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errormessage_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FailJobRequest::~FailJobRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.FailJobRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FailJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.errormessage_.Destroy();
}

void FailJobRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FailJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.FailJobRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errormessage_.ClearToEmpty();
  ::memset(&_impl_.jobkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.retries_) -
      reinterpret_cast<char*>(&_impl_.jobkey_)) + sizeof(_impl_.retries_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FailJobRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 jobKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.jobkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 retries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.retries_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string errorMessage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_errormessage();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.FailJobRequest.errorMessage"));
        } else
          goto handle_unusual;
        continue;
      // int64 retryBackOff = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.retrybackoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FailJobRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.FailJobRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_jobkey(), target);
  }

  // int32 retries = 2;
  if (this->_internal_retries() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_retries(), target);
  }

  // string errorMessage = 3;
  if (!this->_internal_errormessage().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormessage().data(), static_cast<int>(this->_internal_errormessage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.FailJobRequest.errorMessage");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_errormessage(), target);
  }

  // int64 retryBackOff = 4;
  if (this->_internal_retrybackoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_retrybackoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.FailJobRequest)
  return target;
}

size_t FailJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.FailJobRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorMessage = 3;
  if (!this->_internal_errormessage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errormessage());
  }

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_jobkey());
  }

  // int64 retryBackOff = 4;
  if (this->_internal_retrybackoff() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_retrybackoff());
  }

  // int32 retries = 2;
  if (this->_internal_retries() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retries());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FailJobRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FailJobRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FailJobRequest::GetClassData() const { return &_class_data_; }


void FailJobRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FailJobRequest*>(&to_msg);
  auto& from = static_cast<const FailJobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.FailJobRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  if (from._internal_jobkey() != 0) {
    _this->_internal_set_jobkey(from._internal_jobkey());
  }
  if (from._internal_retrybackoff() != 0) {
    _this->_internal_set_retrybackoff(from._internal_retrybackoff());
  }
  if (from._internal_retries() != 0) {
    _this->_internal_set_retries(from._internal_retries());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FailJobRequest::CopyFrom(const FailJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.FailJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FailJobRequest::IsInitialized() const {
  return true;
}

void FailJobRequest::InternalSwap(FailJobRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errormessage_, lhs_arena,
      &other->_impl_.errormessage_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FailJobRequest, _impl_.retries_)
      + sizeof(FailJobRequest::_impl_.retries_)
      - PROTOBUF_FIELD_OFFSET(FailJobRequest, _impl_.jobkey_)>(
          reinterpret_cast<char*>(&_impl_.jobkey_),
          reinterpret_cast<char*>(&other->_impl_.jobkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FailJobRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[22]);
}

// ===================================================================

class FailJobResponse::_Internal {
 public:
};

FailJobResponse::FailJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.FailJobResponse)
}
FailJobResponse::FailJobResponse(const FailJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  FailJobResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.FailJobResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FailJobResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FailJobResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata FailJobResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[23]);
}

// ===================================================================

class ThrowErrorRequest::_Internal {
 public:
};

ThrowErrorRequest::ThrowErrorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ThrowErrorRequest)
}
ThrowErrorRequest::ThrowErrorRequest(const ThrowErrorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ThrowErrorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errorcode_){}
    , decltype(_impl_.errormessage_){}
    , decltype(_impl_.jobkey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.errorcode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errorcode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errorcode().empty()) {
    _this->_impl_.errorcode_.Set(from._internal_errorcode(), 
      _this->GetArenaForAllocation());
  }
  _impl_.errormessage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errormessage_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errormessage().empty()) {
    _this->_impl_.errormessage_.Set(from._internal_errormessage(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.jobkey_ = from._impl_.jobkey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ThrowErrorRequest)
}

inline void ThrowErrorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errorcode_){}
    , decltype(_impl_.errormessage_){}
    , decltype(_impl_.jobkey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.errorcode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errorcode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.errormessage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errormessage_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ThrowErrorRequest::~ThrowErrorRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ThrowErrorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ThrowErrorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.errorcode_.Destroy();
  _impl_.errormessage_.Destroy();
}

void ThrowErrorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ThrowErrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ThrowErrorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errorcode_.ClearToEmpty();
  _impl_.errormessage_.ClearToEmpty();
  _impl_.jobkey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ThrowErrorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 jobKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.jobkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string errorCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errorcode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ThrowErrorRequest.errorCode"));
        } else
          goto handle_unusual;
        continue;
      // string errorMessage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_errormessage();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ThrowErrorRequest.errorMessage"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ThrowErrorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ThrowErrorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_jobkey(), target);
  }

  // string errorCode = 2;
  if (!this->_internal_errorcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errorcode().data(), static_cast<int>(this->_internal_errorcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ThrowErrorRequest.errorCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_errorcode(), target);
  }

  // string errorMessage = 3;
  if (!this->_internal_errormessage().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormessage().data(), static_cast<int>(this->_internal_errormessage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ThrowErrorRequest.errorMessage");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_errormessage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ThrowErrorRequest)
  return target;
}

size_t ThrowErrorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ThrowErrorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorCode = 2;
  if (!this->_internal_errorcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errorcode());
  }

  // string errorMessage = 3;
  if (!this->_internal_errormessage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errormessage());
  }

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_jobkey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThrowErrorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ThrowErrorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThrowErrorRequest::GetClassData() const { return &_class_data_; }


void ThrowErrorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ThrowErrorRequest*>(&to_msg);
  auto& from = static_cast<const ThrowErrorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ThrowErrorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errorcode().empty()) {
    _this->_internal_set_errorcode(from._internal_errorcode());
  }
  if (!from._internal_errormessage().empty()) {
    _this->_internal_set_errormessage(from._internal_errormessage());
  }
  if (from._internal_jobkey() != 0) {
    _this->_internal_set_jobkey(from._internal_jobkey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ThrowErrorRequest::CopyFrom(const ThrowErrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ThrowErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThrowErrorRequest::IsInitialized() const {
  return true;
}

void ThrowErrorRequest::InternalSwap(ThrowErrorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errorcode_, lhs_arena,
      &other->_impl_.errorcode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errormessage_, lhs_arena,
      &other->_impl_.errormessage_, rhs_arena
  );
  swap(_impl_.jobkey_, other->_impl_.jobkey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ThrowErrorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[24]);
}

// ===================================================================

class ThrowErrorResponse::_Internal {
 public:
};

ThrowErrorResponse::ThrowErrorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ThrowErrorResponse)
}
ThrowErrorResponse::ThrowErrorResponse(const ThrowErrorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ThrowErrorResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ThrowErrorResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThrowErrorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThrowErrorResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ThrowErrorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[25]);
}

// ===================================================================

class PublishMessageRequest::_Internal {
 public:
};

PublishMessageRequest::PublishMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.PublishMessageRequest)
}
PublishMessageRequest::PublishMessageRequest(const PublishMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PublishMessageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.correlationkey_){}
    , decltype(_impl_.messageid_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.timetolive_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.correlationkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.correlationkey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_correlationkey().empty()) {
    _this->_impl_.correlationkey_.Set(from._internal_correlationkey(), 
      _this->GetArenaForAllocation());
  }
  _impl_.messageid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.messageid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_messageid().empty()) {
    _this->_impl_.messageid_.Set(from._internal_messageid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.timetolive_ = from._impl_.timetolive_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.PublishMessageRequest)
}

inline void PublishMessageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.correlationkey_){}
    , decltype(_impl_.messageid_){}
    , decltype(_impl_.variables_){}
    , decltype(_impl_.timetolive_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.correlationkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.correlationkey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.messageid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.messageid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PublishMessageRequest::~PublishMessageRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.PublishMessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublishMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.correlationkey_.Destroy();
  _impl_.messageid_.Destroy();
  _impl_.variables_.Destroy();
}

void PublishMessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PublishMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.PublishMessageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.correlationkey_.ClearToEmpty();
  _impl_.messageid_.ClearToEmpty();
  _impl_.variables_.ClearToEmpty();
  _impl_.timetolive_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishMessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.PublishMessageRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string correlationKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_correlationkey();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.PublishMessageRequest.correlationKey"));
        } else
          goto handle_unusual;
        continue;
      // int64 timeToLive = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.timetolive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string messageId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_messageid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.PublishMessageRequest.messageId"));
        } else
          goto handle_unusual;
        continue;
      // string variables = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.PublishMessageRequest.variables"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishMessageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.PublishMessageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.PublishMessageRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string correlationKey = 2;
  if (!this->_internal_correlationkey().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_correlationkey().data(), static_cast<int>(this->_internal_correlationkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.PublishMessageRequest.correlationKey");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_correlationkey(), target);
  }

  // int64 timeToLive = 3;
  if (this->_internal_timetolive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_timetolive(), target);
  }

  // string messageId = 4;
  if (!this->_internal_messageid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_messageid().data(), static_cast<int>(this->_internal_messageid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.PublishMessageRequest.messageId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_messageid(), target);
  }

  // string variables = 5;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.PublishMessageRequest.variables");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_variables(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.PublishMessageRequest)
  return target;
}

size_t PublishMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.PublishMessageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string correlationKey = 2;
  if (!this->_internal_correlationkey().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_correlationkey());
  }

  // string messageId = 4;
  if (!this->_internal_messageid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_messageid());
  }

  // string variables = 5;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // int64 timeToLive = 3;
  if (this->_internal_timetolive() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timetolive());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishMessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PublishMessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishMessageRequest::GetClassData() const { return &_class_data_; }


void PublishMessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PublishMessageRequest*>(&to_msg);
  auto& from = static_cast<const PublishMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.PublishMessageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_correlationkey().empty()) {
    _this->_internal_set_correlationkey(from._internal_correlationkey());
  }
  if (!from._internal_messageid().empty()) {
    _this->_internal_set_messageid(from._internal_messageid());
  }
  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (from._internal_timetolive() != 0) {
    _this->_internal_set_timetolive(from._internal_timetolive());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishMessageRequest::CopyFrom(const PublishMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.PublishMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishMessageRequest::IsInitialized() const {
  return true;
}

void PublishMessageRequest::InternalSwap(PublishMessageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.correlationkey_, lhs_arena,
      &other->_impl_.correlationkey_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.messageid_, lhs_arena,
      &other->_impl_.messageid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  swap(_impl_.timetolive_, other->_impl_.timetolive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[26]);
}

// ===================================================================

class PublishMessageResponse::_Internal {
 public:
};

PublishMessageResponse::PublishMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.PublishMessageResponse)
}
PublishMessageResponse::PublishMessageResponse(const PublishMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PublishMessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.key_ = from._impl_.key_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.PublishMessageResponse)
}

inline void PublishMessageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PublishMessageResponse::~PublishMessageResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.PublishMessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PublishMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PublishMessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PublishMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.PublishMessageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishMessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PublishMessageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.PublishMessageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.PublishMessageResponse)
  return target;
}

size_t PublishMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.PublishMessageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PublishMessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PublishMessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PublishMessageResponse::GetClassData() const { return &_class_data_; }


void PublishMessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PublishMessageResponse*>(&to_msg);
  auto& from = static_cast<const PublishMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.PublishMessageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PublishMessageResponse::CopyFrom(const PublishMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.PublishMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishMessageResponse::IsInitialized() const {
  return true;
}

void PublishMessageResponse::InternalSwap(PublishMessageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.key_, other->_impl_.key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[27]);
}

// ===================================================================

class ResolveIncidentRequest::_Internal {
 public:
};

ResolveIncidentRequest::ResolveIncidentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ResolveIncidentRequest)
}
ResolveIncidentRequest::ResolveIncidentRequest(const ResolveIncidentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResolveIncidentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.incidentkey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.incidentkey_ = from._impl_.incidentkey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ResolveIncidentRequest)
}

inline void ResolveIncidentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.incidentkey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResolveIncidentRequest::~ResolveIncidentRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ResolveIncidentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResolveIncidentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResolveIncidentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResolveIncidentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ResolveIncidentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.incidentkey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResolveIncidentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 incidentKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.incidentkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResolveIncidentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ResolveIncidentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 incidentKey = 1;
  if (this->_internal_incidentkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_incidentkey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ResolveIncidentRequest)
  return target;
}

size_t ResolveIncidentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ResolveIncidentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 incidentKey = 1;
  if (this->_internal_incidentkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_incidentkey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolveIncidentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResolveIncidentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolveIncidentRequest::GetClassData() const { return &_class_data_; }


void ResolveIncidentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResolveIncidentRequest*>(&to_msg);
  auto& from = static_cast<const ResolveIncidentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ResolveIncidentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_incidentkey() != 0) {
    _this->_internal_set_incidentkey(from._internal_incidentkey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveIncidentRequest::CopyFrom(const ResolveIncidentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ResolveIncidentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveIncidentRequest::IsInitialized() const {
  return true;
}

void ResolveIncidentRequest::InternalSwap(ResolveIncidentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.incidentkey_, other->_impl_.incidentkey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolveIncidentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[28]);
}

// ===================================================================

class ResolveIncidentResponse::_Internal {
 public:
};

ResolveIncidentResponse::ResolveIncidentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ResolveIncidentResponse)
}
ResolveIncidentResponse::ResolveIncidentResponse(const ResolveIncidentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ResolveIncidentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ResolveIncidentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolveIncidentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolveIncidentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResolveIncidentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[29]);
}

// ===================================================================

class TopologyRequest::_Internal {
 public:
};

TopologyRequest::TopologyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.TopologyRequest)
}
TopologyRequest::TopologyRequest(const TopologyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  TopologyRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.TopologyRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TopologyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TopologyRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata TopologyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[30]);
}

// ===================================================================

class TopologyResponse::_Internal {
 public:
};

TopologyResponse::TopologyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.TopologyResponse)
}
TopologyResponse::TopologyResponse(const TopologyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TopologyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.brokers_){from._impl_.brokers_}
    , decltype(_impl_.gatewayversion_){}
    , decltype(_impl_.clustersize_){}
    , decltype(_impl_.partitionscount_){}
    , decltype(_impl_.replicationfactor_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.gatewayversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.gatewayversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gatewayversion().empty()) {
    _this->_impl_.gatewayversion_.Set(from._internal_gatewayversion(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.clustersize_, &from._impl_.clustersize_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.replicationfactor_) -
    reinterpret_cast<char*>(&_impl_.clustersize_)) + sizeof(_impl_.replicationfactor_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.TopologyResponse)
}

inline void TopologyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.brokers_){arena}
    , decltype(_impl_.gatewayversion_){}
    , decltype(_impl_.clustersize_){0}
    , decltype(_impl_.partitionscount_){0}
    , decltype(_impl_.replicationfactor_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.gatewayversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.gatewayversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TopologyResponse::~TopologyResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.TopologyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TopologyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.brokers_.~RepeatedPtrField();
  _impl_.gatewayversion_.Destroy();
}

void TopologyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TopologyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.TopologyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.brokers_.Clear();
  _impl_.gatewayversion_.ClearToEmpty();
  ::memset(&_impl_.clustersize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.replicationfactor_) -
      reinterpret_cast<char*>(&_impl_.clustersize_)) + sizeof(_impl_.replicationfactor_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopologyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .gateway_protocol.BrokerInfo brokers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_brokers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 clusterSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.clustersize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 partitionsCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.partitionscount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 replicationFactor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.replicationfactor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string gatewayVersion = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_gatewayversion();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.TopologyResponse.gatewayVersion"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TopologyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.TopologyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gateway_protocol.BrokerInfo brokers = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_brokers_size()); i < n; i++) {
    const auto& repfield = this->_internal_brokers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 clusterSize = 2;
  if (this->_internal_clustersize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_clustersize(), target);
  }

  // int32 partitionsCount = 3;
  if (this->_internal_partitionscount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_partitionscount(), target);
  }

  // int32 replicationFactor = 4;
  if (this->_internal_replicationfactor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_replicationfactor(), target);
  }

  // string gatewayVersion = 5;
  if (!this->_internal_gatewayversion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gatewayversion().data(), static_cast<int>(this->_internal_gatewayversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.TopologyResponse.gatewayVersion");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_gatewayversion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.TopologyResponse)
  return target;
}

size_t TopologyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.TopologyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.BrokerInfo brokers = 1;
  total_size += 1UL * this->_internal_brokers_size();
  for (const auto& msg : this->_impl_.brokers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string gatewayVersion = 5;
  if (!this->_internal_gatewayversion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gatewayversion());
  }

  // int32 clusterSize = 2;
  if (this->_internal_clustersize() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_clustersize());
  }

  // int32 partitionsCount = 3;
  if (this->_internal_partitionscount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_partitionscount());
  }

  // int32 replicationFactor = 4;
  if (this->_internal_replicationfactor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_replicationfactor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TopologyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TopologyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TopologyResponse::GetClassData() const { return &_class_data_; }


void TopologyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TopologyResponse*>(&to_msg);
  auto& from = static_cast<const TopologyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.TopologyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.brokers_.MergeFrom(from._impl_.brokers_);
  if (!from._internal_gatewayversion().empty()) {
    _this->_internal_set_gatewayversion(from._internal_gatewayversion());
  }
  if (from._internal_clustersize() != 0) {
    _this->_internal_set_clustersize(from._internal_clustersize());
  }
  if (from._internal_partitionscount() != 0) {
    _this->_internal_set_partitionscount(from._internal_partitionscount());
  }
  if (from._internal_replicationfactor() != 0) {
    _this->_internal_set_replicationfactor(from._internal_replicationfactor());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TopologyResponse::CopyFrom(const TopologyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.TopologyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopologyResponse::IsInitialized() const {
  return true;
}

void TopologyResponse::InternalSwap(TopologyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.brokers_.InternalSwap(&other->_impl_.brokers_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.gatewayversion_, lhs_arena,
      &other->_impl_.gatewayversion_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TopologyResponse, _impl_.replicationfactor_)
      + sizeof(TopologyResponse::_impl_.replicationfactor_)
      - PROTOBUF_FIELD_OFFSET(TopologyResponse, _impl_.clustersize_)>(
          reinterpret_cast<char*>(&_impl_.clustersize_),
          reinterpret_cast<char*>(&other->_impl_.clustersize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TopologyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[31]);
}

// ===================================================================

class BrokerInfo::_Internal {
 public:
};

BrokerInfo::BrokerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.BrokerInfo)
}
BrokerInfo::BrokerInfo(const BrokerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BrokerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.partitions_){from._impl_.partitions_}
    , decltype(_impl_.host_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.nodeid_){}
    , decltype(_impl_.port_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    _this->_impl_.host_.Set(from._internal_host(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.nodeid_, &from._impl_.nodeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.port_) -
    reinterpret_cast<char*>(&_impl_.nodeid_)) + sizeof(_impl_.port_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.BrokerInfo)
}

inline void BrokerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.partitions_){arena}
    , decltype(_impl_.host_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.nodeid_){0}
    , decltype(_impl_.port_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BrokerInfo::~BrokerInfo() {
  // @@protoc_insertion_point(destructor:gateway_protocol.BrokerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BrokerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.partitions_.~RepeatedPtrField();
  _impl_.host_.Destroy();
  _impl_.version_.Destroy();
}

void BrokerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BrokerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.BrokerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.partitions_.Clear();
  _impl_.host_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  ::memset(&_impl_.nodeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.nodeid_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BrokerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nodeId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nodeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.BrokerInfo.host"));
        } else
          goto handle_unusual;
        continue;
      // int32 port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.Partition partitions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_partitions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.BrokerInfo.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BrokerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.BrokerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nodeId = 1;
  if (this->_internal_nodeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_nodeid(), target);
  }

  // string host = 2;
  if (!this->_internal_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.BrokerInfo.host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_host(), target);
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_port(), target);
  }

  // repeated .gateway_protocol.Partition partitions = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_partitions_size()); i < n; i++) {
    const auto& repfield = this->_internal_partitions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string version = 5;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.BrokerInfo.version");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.BrokerInfo)
  return target;
}

size_t BrokerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.BrokerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.Partition partitions = 4;
  total_size += 1UL * this->_internal_partitions_size();
  for (const auto& msg : this->_impl_.partitions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string host = 2;
  if (!this->_internal_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string version = 5;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // int32 nodeId = 1;
  if (this->_internal_nodeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nodeid());
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BrokerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BrokerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BrokerInfo::GetClassData() const { return &_class_data_; }


void BrokerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BrokerInfo*>(&to_msg);
  auto& from = static_cast<const BrokerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.BrokerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.partitions_.MergeFrom(from._impl_.partitions_);
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_nodeid() != 0) {
    _this->_internal_set_nodeid(from._internal_nodeid());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerInfo::CopyFrom(const BrokerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.BrokerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrokerInfo::IsInitialized() const {
  return true;
}

void BrokerInfo::InternalSwap(BrokerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.partitions_.InternalSwap(&other->_impl_.partitions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.host_, lhs_arena,
      &other->_impl_.host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BrokerInfo, _impl_.port_)
      + sizeof(BrokerInfo::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(BrokerInfo, _impl_.nodeid_)>(
          reinterpret_cast<char*>(&_impl_.nodeid_),
          reinterpret_cast<char*>(&other->_impl_.nodeid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BrokerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[32]);
}

// ===================================================================

class Partition::_Internal {
 public:
};

Partition::Partition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.Partition)
}
Partition::Partition(const Partition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Partition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.partitionid_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.health_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.partitionid_, &from._impl_.partitionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.health_) -
    reinterpret_cast<char*>(&_impl_.partitionid_)) + sizeof(_impl_.health_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.Partition)
}

inline void Partition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.partitionid_){0}
    , decltype(_impl_.role_){0}
    , decltype(_impl_.health_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Partition::~Partition() {
  // @@protoc_insertion_point(destructor:gateway_protocol.Partition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Partition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Partition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Partition::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.Partition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.partitionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.health_) -
      reinterpret_cast<char*>(&_impl_.partitionid_)) + sizeof(_impl_.health_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Partition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 partitionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.partitionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .gateway_protocol.Partition.PartitionBrokerRole role = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_role(static_cast<::gateway_protocol::Partition_PartitionBrokerRole>(val));
        } else
          goto handle_unusual;
        continue;
      // .gateway_protocol.Partition.PartitionBrokerHealth health = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_health(static_cast<::gateway_protocol::Partition_PartitionBrokerHealth>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Partition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.Partition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 partitionId = 1;
  if (this->_internal_partitionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_partitionid(), target);
  }

  // .gateway_protocol.Partition.PartitionBrokerRole role = 2;
  if (this->_internal_role() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_role(), target);
  }

  // .gateway_protocol.Partition.PartitionBrokerHealth health = 3;
  if (this->_internal_health() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_health(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.Partition)
  return target;
}

size_t Partition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.Partition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 partitionId = 1;
  if (this->_internal_partitionid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_partitionid());
  }

  // .gateway_protocol.Partition.PartitionBrokerRole role = 2;
  if (this->_internal_role() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_role());
  }

  // .gateway_protocol.Partition.PartitionBrokerHealth health = 3;
  if (this->_internal_health() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_health());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Partition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Partition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Partition::GetClassData() const { return &_class_data_; }


void Partition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Partition*>(&to_msg);
  auto& from = static_cast<const Partition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.Partition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_partitionid() != 0) {
    _this->_internal_set_partitionid(from._internal_partitionid());
  }
  if (from._internal_role() != 0) {
    _this->_internal_set_role(from._internal_role());
  }
  if (from._internal_health() != 0) {
    _this->_internal_set_health(from._internal_health());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Partition::CopyFrom(const Partition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.Partition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partition::IsInitialized() const {
  return true;
}

void Partition::InternalSwap(Partition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Partition, _impl_.health_)
      + sizeof(Partition::_impl_.health_)
      - PROTOBUF_FIELD_OFFSET(Partition, _impl_.partitionid_)>(
          reinterpret_cast<char*>(&_impl_.partitionid_),
          reinterpret_cast<char*>(&other->_impl_.partitionid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Partition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[33]);
}

// ===================================================================

class UpdateJobRetriesRequest::_Internal {
 public:
};

UpdateJobRetriesRequest::UpdateJobRetriesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.UpdateJobRetriesRequest)
}
UpdateJobRetriesRequest::UpdateJobRetriesRequest(const UpdateJobRetriesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateJobRetriesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jobkey_){}
    , decltype(_impl_.retries_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.jobkey_, &from._impl_.jobkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.retries_) -
    reinterpret_cast<char*>(&_impl_.jobkey_)) + sizeof(_impl_.retries_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.UpdateJobRetriesRequest)
}

inline void UpdateJobRetriesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jobkey_){int64_t{0}}
    , decltype(_impl_.retries_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateJobRetriesRequest::~UpdateJobRetriesRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.UpdateJobRetriesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateJobRetriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateJobRetriesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateJobRetriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.UpdateJobRetriesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.jobkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.retries_) -
      reinterpret_cast<char*>(&_impl_.jobkey_)) + sizeof(_impl_.retries_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateJobRetriesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 jobKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.jobkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 retries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.retries_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateJobRetriesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.UpdateJobRetriesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_jobkey(), target);
  }

  // int32 retries = 2;
  if (this->_internal_retries() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_retries(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.UpdateJobRetriesRequest)
  return target;
}

size_t UpdateJobRetriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.UpdateJobRetriesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 jobKey = 1;
  if (this->_internal_jobkey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_jobkey());
  }

  // int32 retries = 2;
  if (this->_internal_retries() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retries());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateJobRetriesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateJobRetriesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateJobRetriesRequest::GetClassData() const { return &_class_data_; }


void UpdateJobRetriesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateJobRetriesRequest*>(&to_msg);
  auto& from = static_cast<const UpdateJobRetriesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.UpdateJobRetriesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_jobkey() != 0) {
    _this->_internal_set_jobkey(from._internal_jobkey());
  }
  if (from._internal_retries() != 0) {
    _this->_internal_set_retries(from._internal_retries());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateJobRetriesRequest::CopyFrom(const UpdateJobRetriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.UpdateJobRetriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateJobRetriesRequest::IsInitialized() const {
  return true;
}

void UpdateJobRetriesRequest::InternalSwap(UpdateJobRetriesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateJobRetriesRequest, _impl_.retries_)
      + sizeof(UpdateJobRetriesRequest::_impl_.retries_)
      - PROTOBUF_FIELD_OFFSET(UpdateJobRetriesRequest, _impl_.jobkey_)>(
          reinterpret_cast<char*>(&_impl_.jobkey_),
          reinterpret_cast<char*>(&other->_impl_.jobkey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateJobRetriesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[34]);
}

// ===================================================================

class UpdateJobRetriesResponse::_Internal {
 public:
};

UpdateJobRetriesResponse::UpdateJobRetriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.UpdateJobRetriesResponse)
}
UpdateJobRetriesResponse::UpdateJobRetriesResponse(const UpdateJobRetriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateJobRetriesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.UpdateJobRetriesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateJobRetriesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateJobRetriesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateJobRetriesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[35]);
}

// ===================================================================

class SetVariablesRequest::_Internal {
 public:
};

SetVariablesRequest::SetVariablesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.SetVariablesRequest)
}
SetVariablesRequest::SetVariablesRequest(const SetVariablesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVariablesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){}
    , decltype(_impl_.elementinstancekey_){}
    , decltype(_impl_.local_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.elementinstancekey_, &from._impl_.elementinstancekey_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.local_) -
    reinterpret_cast<char*>(&_impl_.elementinstancekey_)) + sizeof(_impl_.local_));
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.SetVariablesRequest)
}

inline void SetVariablesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){}
    , decltype(_impl_.elementinstancekey_){int64_t{0}}
    , decltype(_impl_.local_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetVariablesRequest::~SetVariablesRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.SetVariablesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVariablesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.variables_.Destroy();
}

void SetVariablesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVariablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.SetVariablesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variables_.ClearToEmpty();
  ::memset(&_impl_.elementinstancekey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.local_) -
      reinterpret_cast<char*>(&_impl_.elementinstancekey_)) + sizeof(_impl_.local_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVariablesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 elementInstanceKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.elementinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string variables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.SetVariablesRequest.variables"));
        } else
          goto handle_unusual;
        continue;
      // bool local = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.local_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVariablesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.SetVariablesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 elementInstanceKey = 1;
  if (this->_internal_elementinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_elementinstancekey(), target);
  }

  // string variables = 2;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.SetVariablesRequest.variables");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_variables(), target);
  }

  // bool local = 3;
  if (this->_internal_local() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_local(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.SetVariablesRequest)
  return target;
}

size_t SetVariablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.SetVariablesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string variables = 2;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // int64 elementInstanceKey = 1;
  if (this->_internal_elementinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_elementinstancekey());
  }

  // bool local = 3;
  if (this->_internal_local() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVariablesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVariablesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVariablesRequest::GetClassData() const { return &_class_data_; }


void SetVariablesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVariablesRequest*>(&to_msg);
  auto& from = static_cast<const SetVariablesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.SetVariablesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (from._internal_elementinstancekey() != 0) {
    _this->_internal_set_elementinstancekey(from._internal_elementinstancekey());
  }
  if (from._internal_local() != 0) {
    _this->_internal_set_local(from._internal_local());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVariablesRequest::CopyFrom(const SetVariablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.SetVariablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVariablesRequest::IsInitialized() const {
  return true;
}

void SetVariablesRequest::InternalSwap(SetVariablesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetVariablesRequest, _impl_.local_)
      + sizeof(SetVariablesRequest::_impl_.local_)
      - PROTOBUF_FIELD_OFFSET(SetVariablesRequest, _impl_.elementinstancekey_)>(
          reinterpret_cast<char*>(&_impl_.elementinstancekey_),
          reinterpret_cast<char*>(&other->_impl_.elementinstancekey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVariablesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[36]);
}

// ===================================================================

class SetVariablesResponse::_Internal {
 public:
};

SetVariablesResponse::SetVariablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.SetVariablesResponse)
}
SetVariablesResponse::SetVariablesResponse(const SetVariablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVariablesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.key_ = from._impl_.key_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.SetVariablesResponse)
}

inline void SetVariablesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetVariablesResponse::~SetVariablesResponse() {
  // @@protoc_insertion_point(destructor:gateway_protocol.SetVariablesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVariablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetVariablesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVariablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.SetVariablesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVariablesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVariablesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.SetVariablesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.SetVariablesResponse)
  return target;
}

size_t SetVariablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.SetVariablesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVariablesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVariablesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVariablesResponse::GetClassData() const { return &_class_data_; }


void SetVariablesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVariablesResponse*>(&to_msg);
  auto& from = static_cast<const SetVariablesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.SetVariablesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVariablesResponse::CopyFrom(const SetVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.SetVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVariablesResponse::IsInitialized() const {
  return true;
}

void SetVariablesResponse::InternalSwap(SetVariablesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.key_, other->_impl_.key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVariablesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[37]);
}

// ===================================================================

class ModifyProcessInstanceRequest_ActivateInstruction::_Internal {
 public:
};

ModifyProcessInstanceRequest_ActivateInstruction::ModifyProcessInstanceRequest_ActivateInstruction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
}
ModifyProcessInstanceRequest_ActivateInstruction::ModifyProcessInstanceRequest_ActivateInstruction(const ModifyProcessInstanceRequest_ActivateInstruction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModifyProcessInstanceRequest_ActivateInstruction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variableinstructions_){from._impl_.variableinstructions_}
    , decltype(_impl_.elementid_){}
    , decltype(_impl_.ancestorelementinstancekey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.elementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.elementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_elementid().empty()) {
    _this->_impl_.elementid_.Set(from._internal_elementid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.ancestorelementinstancekey_ = from._impl_.ancestorelementinstancekey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
}

inline void ModifyProcessInstanceRequest_ActivateInstruction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variableinstructions_){arena}
    , decltype(_impl_.elementid_){}
    , decltype(_impl_.ancestorelementinstancekey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.elementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.elementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModifyProcessInstanceRequest_ActivateInstruction::~ModifyProcessInstanceRequest_ActivateInstruction() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModifyProcessInstanceRequest_ActivateInstruction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.variableinstructions_.~RepeatedPtrField();
  _impl_.elementid_.Destroy();
}

void ModifyProcessInstanceRequest_ActivateInstruction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModifyProcessInstanceRequest_ActivateInstruction::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variableinstructions_.Clear();
  _impl_.elementid_.ClearToEmpty();
  _impl_.ancestorelementinstancekey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModifyProcessInstanceRequest_ActivateInstruction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string elementId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_elementid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction.elementId"));
        } else
          goto handle_unusual;
        continue;
      // int64 ancestorElementInstanceKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ancestorelementinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction variableInstructions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_variableinstructions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModifyProcessInstanceRequest_ActivateInstruction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string elementId = 1;
  if (!this->_internal_elementid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_elementid().data(), static_cast<int>(this->_internal_elementid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction.elementId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_elementid(), target);
  }

  // int64 ancestorElementInstanceKey = 2;
  if (this->_internal_ancestorelementinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_ancestorelementinstancekey(), target);
  }

  // repeated .gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction variableInstructions = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_variableinstructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_variableinstructions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  return target;
}

size_t ModifyProcessInstanceRequest_ActivateInstruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction variableInstructions = 3;
  total_size += 1UL * this->_internal_variableinstructions_size();
  for (const auto& msg : this->_impl_.variableinstructions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string elementId = 1;
  if (!this->_internal_elementid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_elementid());
  }

  // int64 ancestorElementInstanceKey = 2;
  if (this->_internal_ancestorelementinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_ancestorelementinstancekey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyProcessInstanceRequest_ActivateInstruction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModifyProcessInstanceRequest_ActivateInstruction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyProcessInstanceRequest_ActivateInstruction::GetClassData() const { return &_class_data_; }


void ModifyProcessInstanceRequest_ActivateInstruction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModifyProcessInstanceRequest_ActivateInstruction*>(&to_msg);
  auto& from = static_cast<const ModifyProcessInstanceRequest_ActivateInstruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.variableinstructions_.MergeFrom(from._impl_.variableinstructions_);
  if (!from._internal_elementid().empty()) {
    _this->_internal_set_elementid(from._internal_elementid());
  }
  if (from._internal_ancestorelementinstancekey() != 0) {
    _this->_internal_set_ancestorelementinstancekey(from._internal_ancestorelementinstancekey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyProcessInstanceRequest_ActivateInstruction::CopyFrom(const ModifyProcessInstanceRequest_ActivateInstruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyProcessInstanceRequest_ActivateInstruction::IsInitialized() const {
  return true;
}

void ModifyProcessInstanceRequest_ActivateInstruction::InternalSwap(ModifyProcessInstanceRequest_ActivateInstruction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.variableinstructions_.InternalSwap(&other->_impl_.variableinstructions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.elementid_, lhs_arena,
      &other->_impl_.elementid_, rhs_arena
  );
  swap(_impl_.ancestorelementinstancekey_, other->_impl_.ancestorelementinstancekey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModifyProcessInstanceRequest_ActivateInstruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[38]);
}

// ===================================================================

class ModifyProcessInstanceRequest_VariableInstruction::_Internal {
 public:
};

ModifyProcessInstanceRequest_VariableInstruction::ModifyProcessInstanceRequest_VariableInstruction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
}
ModifyProcessInstanceRequest_VariableInstruction::ModifyProcessInstanceRequest_VariableInstruction(const ModifyProcessInstanceRequest_VariableInstruction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModifyProcessInstanceRequest_VariableInstruction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){}
    , decltype(_impl_.scopeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_variables().empty()) {
    _this->_impl_.variables_.Set(from._internal_variables(), 
      _this->GetArenaForAllocation());
  }
  _impl_.scopeid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.scopeid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scopeid().empty()) {
    _this->_impl_.scopeid_.Set(from._internal_scopeid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
}

inline void ModifyProcessInstanceRequest_VariableInstruction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){}
    , decltype(_impl_.scopeid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.variables_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.variables_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.scopeid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.scopeid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModifyProcessInstanceRequest_VariableInstruction::~ModifyProcessInstanceRequest_VariableInstruction() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModifyProcessInstanceRequest_VariableInstruction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.variables_.Destroy();
  _impl_.scopeid_.Destroy();
}

void ModifyProcessInstanceRequest_VariableInstruction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModifyProcessInstanceRequest_VariableInstruction::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variables_.ClearToEmpty();
  _impl_.scopeid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModifyProcessInstanceRequest_VariableInstruction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string variables = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_variables();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction.variables"));
        } else
          goto handle_unusual;
        continue;
      // string scopeId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_scopeid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction.scopeId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModifyProcessInstanceRequest_VariableInstruction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string variables = 1;
  if (!this->_internal_variables().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variables().data(), static_cast<int>(this->_internal_variables().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction.variables");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_variables(), target);
  }

  // string scopeId = 2;
  if (!this->_internal_scopeid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scopeid().data(), static_cast<int>(this->_internal_scopeid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction.scopeId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scopeid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  return target;
}

size_t ModifyProcessInstanceRequest_VariableInstruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string variables = 1;
  if (!this->_internal_variables().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variables());
  }

  // string scopeId = 2;
  if (!this->_internal_scopeid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scopeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyProcessInstanceRequest_VariableInstruction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModifyProcessInstanceRequest_VariableInstruction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyProcessInstanceRequest_VariableInstruction::GetClassData() const { return &_class_data_; }


void ModifyProcessInstanceRequest_VariableInstruction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModifyProcessInstanceRequest_VariableInstruction*>(&to_msg);
  auto& from = static_cast<const ModifyProcessInstanceRequest_VariableInstruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_variables().empty()) {
    _this->_internal_set_variables(from._internal_variables());
  }
  if (!from._internal_scopeid().empty()) {
    _this->_internal_set_scopeid(from._internal_scopeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyProcessInstanceRequest_VariableInstruction::CopyFrom(const ModifyProcessInstanceRequest_VariableInstruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ModifyProcessInstanceRequest.VariableInstruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyProcessInstanceRequest_VariableInstruction::IsInitialized() const {
  return true;
}

void ModifyProcessInstanceRequest_VariableInstruction::InternalSwap(ModifyProcessInstanceRequest_VariableInstruction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.variables_, lhs_arena,
      &other->_impl_.variables_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.scopeid_, lhs_arena,
      &other->_impl_.scopeid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModifyProcessInstanceRequest_VariableInstruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[39]);
}

// ===================================================================

class ModifyProcessInstanceRequest_TerminateInstruction::_Internal {
 public:
};

ModifyProcessInstanceRequest_TerminateInstruction::ModifyProcessInstanceRequest_TerminateInstruction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
}
ModifyProcessInstanceRequest_TerminateInstruction::ModifyProcessInstanceRequest_TerminateInstruction(const ModifyProcessInstanceRequest_TerminateInstruction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModifyProcessInstanceRequest_TerminateInstruction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.elementinstancekey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.elementinstancekey_ = from._impl_.elementinstancekey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
}

inline void ModifyProcessInstanceRequest_TerminateInstruction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.elementinstancekey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModifyProcessInstanceRequest_TerminateInstruction::~ModifyProcessInstanceRequest_TerminateInstruction() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModifyProcessInstanceRequest_TerminateInstruction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModifyProcessInstanceRequest_TerminateInstruction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModifyProcessInstanceRequest_TerminateInstruction::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elementinstancekey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModifyProcessInstanceRequest_TerminateInstruction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 elementInstanceKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.elementinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModifyProcessInstanceRequest_TerminateInstruction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 elementInstanceKey = 1;
  if (this->_internal_elementinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_elementinstancekey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  return target;
}

size_t ModifyProcessInstanceRequest_TerminateInstruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 elementInstanceKey = 1;
  if (this->_internal_elementinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_elementinstancekey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyProcessInstanceRequest_TerminateInstruction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModifyProcessInstanceRequest_TerminateInstruction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyProcessInstanceRequest_TerminateInstruction::GetClassData() const { return &_class_data_; }


void ModifyProcessInstanceRequest_TerminateInstruction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModifyProcessInstanceRequest_TerminateInstruction*>(&to_msg);
  auto& from = static_cast<const ModifyProcessInstanceRequest_TerminateInstruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_elementinstancekey() != 0) {
    _this->_internal_set_elementinstancekey(from._internal_elementinstancekey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyProcessInstanceRequest_TerminateInstruction::CopyFrom(const ModifyProcessInstanceRequest_TerminateInstruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyProcessInstanceRequest_TerminateInstruction::IsInitialized() const {
  return true;
}

void ModifyProcessInstanceRequest_TerminateInstruction::InternalSwap(ModifyProcessInstanceRequest_TerminateInstruction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.elementinstancekey_, other->_impl_.elementinstancekey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModifyProcessInstanceRequest_TerminateInstruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[40]);
}

// ===================================================================

class ModifyProcessInstanceRequest::_Internal {
 public:
};

ModifyProcessInstanceRequest::ModifyProcessInstanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ModifyProcessInstanceRequest)
}
ModifyProcessInstanceRequest::ModifyProcessInstanceRequest(const ModifyProcessInstanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModifyProcessInstanceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.activateinstructions_){from._impl_.activateinstructions_}
    , decltype(_impl_.terminateinstructions_){from._impl_.terminateinstructions_}
    , decltype(_impl_.processinstancekey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.processinstancekey_ = from._impl_.processinstancekey_;
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ModifyProcessInstanceRequest)
}

inline void ModifyProcessInstanceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.activateinstructions_){arena}
    , decltype(_impl_.terminateinstructions_){arena}
    , decltype(_impl_.processinstancekey_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModifyProcessInstanceRequest::~ModifyProcessInstanceRequest() {
  // @@protoc_insertion_point(destructor:gateway_protocol.ModifyProcessInstanceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModifyProcessInstanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.activateinstructions_.~RepeatedPtrField();
  _impl_.terminateinstructions_.~RepeatedPtrField();
}

void ModifyProcessInstanceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModifyProcessInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_protocol.ModifyProcessInstanceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.activateinstructions_.Clear();
  _impl_.terminateinstructions_.Clear();
  _impl_.processinstancekey_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModifyProcessInstanceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 processInstanceKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.processinstancekey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction activateInstructions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_activateinstructions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction terminateInstructions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_terminateinstructions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModifyProcessInstanceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_protocol.ModifyProcessInstanceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 processInstanceKey = 1;
  if (this->_internal_processinstancekey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_processinstancekey(), target);
  }

  // repeated .gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction activateInstructions = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_activateinstructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_activateinstructions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction terminateInstructions = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_terminateinstructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_terminateinstructions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gateway_protocol.ModifyProcessInstanceRequest)
  return target;
}

size_t ModifyProcessInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_protocol.ModifyProcessInstanceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gateway_protocol.ModifyProcessInstanceRequest.ActivateInstruction activateInstructions = 2;
  total_size += 1UL * this->_internal_activateinstructions_size();
  for (const auto& msg : this->_impl_.activateinstructions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gateway_protocol.ModifyProcessInstanceRequest.TerminateInstruction terminateInstructions = 3;
  total_size += 1UL * this->_internal_terminateinstructions_size();
  for (const auto& msg : this->_impl_.terminateinstructions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 processInstanceKey = 1;
  if (this->_internal_processinstancekey() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processinstancekey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyProcessInstanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModifyProcessInstanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyProcessInstanceRequest::GetClassData() const { return &_class_data_; }


void ModifyProcessInstanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModifyProcessInstanceRequest*>(&to_msg);
  auto& from = static_cast<const ModifyProcessInstanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gateway_protocol.ModifyProcessInstanceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.activateinstructions_.MergeFrom(from._impl_.activateinstructions_);
  _this->_impl_.terminateinstructions_.MergeFrom(from._impl_.terminateinstructions_);
  if (from._internal_processinstancekey() != 0) {
    _this->_internal_set_processinstancekey(from._internal_processinstancekey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyProcessInstanceRequest::CopyFrom(const ModifyProcessInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_protocol.ModifyProcessInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyProcessInstanceRequest::IsInitialized() const {
  return true;
}

void ModifyProcessInstanceRequest::InternalSwap(ModifyProcessInstanceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.activateinstructions_.InternalSwap(&other->_impl_.activateinstructions_);
  _impl_.terminateinstructions_.InternalSwap(&other->_impl_.terminateinstructions_);
  swap(_impl_.processinstancekey_, other->_impl_.processinstancekey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModifyProcessInstanceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[41]);
}

// ===================================================================

class ModifyProcessInstanceResponse::_Internal {
 public:
};

ModifyProcessInstanceResponse::ModifyProcessInstanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:gateway_protocol.ModifyProcessInstanceResponse)
}
ModifyProcessInstanceResponse::ModifyProcessInstanceResponse(const ModifyProcessInstanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ModifyProcessInstanceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gateway_protocol.ModifyProcessInstanceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyProcessInstanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyProcessInstanceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModifyProcessInstanceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[42]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace gateway_protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gateway_protocol::ActivateJobsRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::ActivateJobsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ActivateJobsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ActivateJobsResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::ActivateJobsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ActivateJobsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ActivatedJob*
Arena::CreateMaybeMessage< ::gateway_protocol::ActivatedJob >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ActivatedJob >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CancelProcessInstanceRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::CancelProcessInstanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CancelProcessInstanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CancelProcessInstanceResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::CancelProcessInstanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CancelProcessInstanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CompleteJobRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::CompleteJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CompleteJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CompleteJobResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::CompleteJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CompleteJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CreateProcessInstanceRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::CreateProcessInstanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CreateProcessInstanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ProcessInstanceCreationStartInstruction*
Arena::CreateMaybeMessage< ::gateway_protocol::ProcessInstanceCreationStartInstruction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ProcessInstanceCreationStartInstruction >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CreateProcessInstanceResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::CreateProcessInstanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CreateProcessInstanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CreateProcessInstanceWithResultRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::CreateProcessInstanceWithResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CreateProcessInstanceWithResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::CreateProcessInstanceWithResultResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::CreateProcessInstanceWithResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::CreateProcessInstanceWithResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::DeployProcessRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::DeployProcessRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::DeployProcessRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ProcessRequestObject*
Arena::CreateMaybeMessage< ::gateway_protocol::ProcessRequestObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ProcessRequestObject >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::DeployProcessResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::DeployProcessResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::DeployProcessResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::DeployResourceRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::DeployResourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::DeployResourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::Resource*
Arena::CreateMaybeMessage< ::gateway_protocol::Resource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::Resource >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::DeployResourceResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::DeployResourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::DeployResourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::Deployment*
Arena::CreateMaybeMessage< ::gateway_protocol::Deployment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::Deployment >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ProcessMetadata*
Arena::CreateMaybeMessage< ::gateway_protocol::ProcessMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ProcessMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::DecisionMetadata*
Arena::CreateMaybeMessage< ::gateway_protocol::DecisionMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::DecisionMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::DecisionRequirementsMetadata*
Arena::CreateMaybeMessage< ::gateway_protocol::DecisionRequirementsMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::DecisionRequirementsMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::FailJobRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::FailJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::FailJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::FailJobResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::FailJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::FailJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ThrowErrorRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::ThrowErrorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ThrowErrorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ThrowErrorResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::ThrowErrorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ThrowErrorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::PublishMessageRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::PublishMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::PublishMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::PublishMessageResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::PublishMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::PublishMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ResolveIncidentRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::ResolveIncidentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ResolveIncidentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ResolveIncidentResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::ResolveIncidentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ResolveIncidentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::TopologyRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::TopologyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::TopologyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::TopologyResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::TopologyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::TopologyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::BrokerInfo*
Arena::CreateMaybeMessage< ::gateway_protocol::BrokerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::BrokerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::Partition*
Arena::CreateMaybeMessage< ::gateway_protocol::Partition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::Partition >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::UpdateJobRetriesRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::UpdateJobRetriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::UpdateJobRetriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::UpdateJobRetriesResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::UpdateJobRetriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::UpdateJobRetriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::SetVariablesRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::SetVariablesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::SetVariablesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::SetVariablesResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::SetVariablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::SetVariablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction*
Arena::CreateMaybeMessage< ::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ModifyProcessInstanceRequest_ActivateInstruction >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction*
Arena::CreateMaybeMessage< ::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ModifyProcessInstanceRequest_VariableInstruction >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ModifyProcessInstanceRequest_TerminateInstruction*
Arena::CreateMaybeMessage< ::gateway_protocol::ModifyProcessInstanceRequest_TerminateInstruction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ModifyProcessInstanceRequest_TerminateInstruction >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ModifyProcessInstanceRequest*
Arena::CreateMaybeMessage< ::gateway_protocol::ModifyProcessInstanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ModifyProcessInstanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gateway_protocol::ModifyProcessInstanceResponse*
Arena::CreateMaybeMessage< ::gateway_protocol::ModifyProcessInstanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gateway_protocol::ModifyProcessInstanceResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
